package util

import (
	"github.com/libsv/go-bt/v2"
	"github.com/libsv/go-bt/v2/chainhash"
)

var (
	// CoinbasePlaceholder hard code this value to avoid having to calculate it every time
	// to help the compiler optimize the code.
	CoinbasePlaceholder = [32]byte{
		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
	}
	CoinbasePlaceholderHashValue = chainhash.Hash(CoinbasePlaceholder)
	CoinbasePlaceholderHash      = &CoinbasePlaceholderHashValue

	FrozenBytes = [36]byte{
		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
		0xFF, 0xFF, 0xFF, 0xFF,
	}
)

var (
	CoinbasePlaceholderTx     *bt.Tx
	coinbasePlaceholderTxHash *chainhash.Hash
)

func init() {
	CoinbasePlaceholderTx = bt.NewTx()
	CoinbasePlaceholderTx.Version = 0xFFFFFFFF
	CoinbasePlaceholderTx.LockTime = 0xFFFFFFFF

	coinbasePlaceholderTxHash = CoinbasePlaceholderTx.TxIDChainHash()
}

func IsCoinbasePlaceHolderTx(tx *bt.Tx) bool {
	return tx.TxIDChainHash().IsEqual(coinbasePlaceholderTxHash)
}
