{"version":3,"file":"4.a2484a66.js","sources":["../../../../../../src/routes/tree/+page.svelte"],"sourcesContent":["<script>\n\timport { blocks, error } from '@stores/nodeStore.js';\n\timport { onMount } from 'svelte';\n\n\tfunction getUniqueValues(obj) {\n\t\tlet values = [];\n\t\tfor (let key in obj) {\n\t\t\tvalues = values.concat(obj[key]);\n\t\t}\n\t\treturn [...new Set(values)];\n\t}\n\n\tfunction createHierarchy(arr) {\n\t\tconst nodeMap = {};\n\t\tlet rootNode = null;\n\n\t\t// First pass: Create nodes and identify the root node\n\t\tarr.forEach((item) => {\n\t\t\t// Create or get the current node\n\t\t\tif (!nodeMap[item.hash]) {\n\t\t\t\tnodeMap[item.hash] = { name: item.hash, children: [] };\n\t\t\t}\n\t\t\tconst currentNode = nodeMap[item.hash];\n\n\t\t\t// Create or get the parent node\n\t\t\tif (!nodeMap[item.previousblockhash]) {\n\t\t\t\tnodeMap[item.previousblockhash] = { name: item.previousblockhash, children: [] };\n\t\t\t}\n\t\t\tconst parentNode = nodeMap[item.previousblockhash];\n\n\t\t\t// Link the current node to its parent\n\t\t\tparentNode.children.push(currentNode);\n\n\t\t\t// If the parent node doesn't have a parent itself, it's the root\n\t\t\tif (!arr.some((i) => i.hash === item.previousblockhash)) {\n\t\t\t\trootNode = parentNode;\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\tname: 'Root',\n\t\t\tchildren: rootNode ? [rootNode] : []\n\t\t};\n\t}\n\n\tonMount(() => {\n\t\tconst width = 600;\n\t\tconst height = 400;\n\n\t\tconst svg = d3.select('#tree').append('svg').attr('width', width).attr('height', height);\n\n\t\t// const treeData = {\n\t\t// \tname: 'Root',\n\t\t// \tchildren: [\n\t\t// \t\t{ name: 'Child 1' },\n\t\t// \t\t{\n\t\t// \t\t\tname: 'Child 2',\n\t\t// \t\t\tchildren: [{ name: 'Grandchild 1' }, { name: 'Grandchild 2' }]\n\t\t// \t\t}\n\t\t// \t]\n\t\t// };\n\t\tconst treeData = createHierarchy(getUniqueValues($blocks));\n\t\tdebugger;\n\n\t\tconst root = d3.hierarchy(treeData);\n\t\tconst treeLayout = d3.tree().size([height, width - 6000]);\n\n\t\ttreeLayout(root);\n\n\t\tconst g = svg.append('g').attr('transform', 'translate(1000,0)');\n\n\t\tconst link = g\n\t\t\t.selectAll('.link')\n\t\t\t.data(root.descendants().slice(1))\n\t\t\t.enter()\n\t\t\t.append('path')\n\t\t\t.attr('class', 'link')\n\t\t\t.attr('d', (d) => {\n\t\t\t\treturn (\n\t\t\t\t\t'M' +\n\t\t\t\t\td.y +\n\t\t\t\t\t',' +\n\t\t\t\t\td.x +\n\t\t\t\t\t'C' +\n\t\t\t\t\t(d.y + d.parent.y) / 2 +\n\t\t\t\t\t',' +\n\t\t\t\t\td.x +\n\t\t\t\t\t' ' +\n\t\t\t\t\t(d.y + d.parent.y) / 2 +\n\t\t\t\t\t',' +\n\t\t\t\t\td.parent.x +\n\t\t\t\t\t' ' +\n\t\t\t\t\td.parent.y +\n\t\t\t\t\t',' +\n\t\t\t\t\td.parent.x\n\t\t\t\t);\n\t\t\t});\n\n\t\tconst node = g\n\t\t\t.selectAll('.node')\n\t\t\t.data(root.descendants())\n\t\t\t.enter()\n\t\t\t.append('g')\n\t\t\t.attr('class', (d) => 'node' + (d.children ? ' node--internal' : ' node--leaf'))\n\t\t\t.attr('transform', (d) => 'translate(' + d.y + ',' + d.x + ')');\n\n\t\tnode.append('circle').attr('r', 10);\n\t\tnode\n\t\t\t.append('text')\n\t\t\t.attr('dy', 3)\n\t\t\t.attr('x', (d) => (d.children ? -15 : 15))\n\t\t\t.style('text-anchor', (d) => (d.children ? 'end' : 'start'))\n\t\t\t.text((d) => d.data.name.substring(0, 6));\n\t});\n</script>\n\n<div>\n\t{#if $error}\n\t\t<p>{$error}</p>\n\t{:else}\n\t\t<div id=\"tree\" />\n\t{/if}\n</div>\n\n<style>\n\t:global(.link) {\n\t\tfill: none;\n\t\tstroke: #555;\n\t\tstroke-opacity: 0.4;\n\t\tstroke-width: 2;\n\t}\n\t:global(.node circle) {\n\t\tfill: #999;\n\t\tstroke: #555;\n\t\tstroke-width: 2px;\n\t}\n\t:global(.node text) {\n\t\tfont-size: 12px;\n\t}\n</style>\n"],"names":["ctx"],"mappings":";;;;;;;;;;;;;;;;;;;AAwHE,uBAAgB,QAAA,KAAA,MAAA;AAAA;;;;;;;;;;;;;;;;QAFZ,IAAM,CAAA;AAAA,MAAA;AAAA;;;;;;;QAAN,IAAM,CAAA;AAAA,MAAA;;;;AAAV,uBAAc,QAAA,GAAA,MAAA;;;;;;;;;UAAVA,KAAM,CAAA;AAAA,QAAA;AAAA;;;;;;;;;;;;MADNA,KAAM,CAAA;AAAA;AAAA,aAAA;;;;;;;;;;;;;;;;;AADZ,uBAMK,QAAA,KAAA,MAAA;;;;;;;;;;;;;;;;;;;;;;;;AAtHK,SAAA,gBAAgB,KAAG;MACvB,SAAM,CAAA;AACD,WAAA,OAAO,KAAG;AAClB,aAAS,OAAO,OAAO,IAAI,GAAG,CAAA;AAAA;AAEhB,SAAA,CAAA,GAAA,IAAA,IAAI,MAAM,CAAA;;AAGjB,SAAA,gBAAgB,KAAG;QACrB,UAAO,CAAA;AACT,MAAA,WAAW;AAGf,MAAI,QAAS,UAAI;SAEX,QAAQ,KAAK,IAAI,GAAA;AACrB,cAAQ,KAAK,IAAI,IAAA,EAAM,MAAM,KAAK,MAAM,UAAQ,CAAA;;AAE3C,UAAA,cAAc,QAAQ,KAAK,IAAI;SAGhC,QAAQ,KAAK,iBAAiB,GAAA;AAClC,cAAQ,KAAK,iBAAiB,IAAA;AAAA,QAAM,MAAM,KAAK;AAAA,QAAmB,UAAQ,CAAA;AAAA;;AAErE,UAAA,aAAa,QAAQ,KAAK,iBAAiB;AAGjD,eAAW,SAAS,KAAK,WAAW;SAG/B,IAAI,KAAM,OAAM,EAAE,SAAS,KAAK,iBAAiB,GAAA;AACrD,iBAAW;AAAA;;;IAKZ,MAAM;AAAA,IACN,UAAU,WAAQ,CAAI,QAAQ,IAAA,CAAA;AAAA;;;;;;;AAIhC,UAAO,MAAA;AACA,UAAA,QAAQ;AACR,UAAA,SAAS;UAET,MAAM,GAAG,OAAO,OAAO,EAAE,OAAO,KAAK,EAAE,KAAK,SAAS,KAAK,EAAE,KAAK,UAAU,MAAM;AAYjF,UAAA,WAAW,gBAAgB,gBAAgB,OAAO,CAAA;AACxD;AAEM,UAAA,OAAO,GAAG,UAAU,QAAQ;UAC5B,aAAa,GAAG,OAAO,KAAI,CAAE,QAAQ,QAAQ,GAAI,CAAA;AAEvD,eAAW,IAAI;UAET,IAAI,IAAI,OAAO,GAAG,EAAE,KAAK,aAAa,mBAAmB;AAElD,MACX,UAAU,OAAO,EACjB,KAAK,KAAK,YAAW,EAAG,MAAM,CAAC,CAC/B,EAAA,MAAK,EACL,OAAO,MAAM,EACb,KAAK,SAAS,MAAM,EACpB,KAAK,KAAM,OAAC;AAEX,aAAA,MACA,EAAE,IACF,MACA,EAAE,IACF,OACC,EAAE,IAAI,EAAE,OAAO,KAAK,IACrB,MACA,EAAE,IACF,OACC,EAAE,IAAI,EAAE,OAAO,KAAK,IACrB,MACA,EAAE,OAAO,IACT,MACA,EAAE,OAAO,IACT,MACA,EAAE,OAAO;AAAA;UAIN,OAAO,EACX,UAAU,OAAO,EACjB,KAAK,KAAK,eACV,MAAK,EACL,OAAO,GAAG,EACV,KAAK,SAAU,OAAM,UAAU,EAAE,WAAW,oBAAoB,cAChE,EAAA,KAAK,aAAc,OAAM,eAAe,EAAE,IAAI,MAAM,EAAE,IAAI,GAAG;AAE/D,SAAK,OAAO,QAAQ,EAAE,KAAK,KAAK,EAAE;AAClC,SACE,OAAO,MAAM,EACb,KAAK,MAAM,CAAC,EACZ,KAAK,KAAM,OAAO,EAAE,WAAY,MAAK,EAAE,EACvC,MAAM,eAAgB,OAAO,EAAE,WAAW,QAAQ,OAAO,EACzD,KAAM,OAAM,EAAE,KAAK,KAAK,UAAU,GAAG,CAAC,CAAA;AAAA;;;;;;;;;"}
