{"version":3,"file":"3.1c567329.js","sources":["../../../../../../src/components/BlocksTableRow.svelte","../../../../../../src/components/BlocksTable.svelte","../../../../../../src/routes/blockchain/+page.svelte"],"sourcesContent":["<script>\n\texport let block = {};\n\n\tfunction formatNumber(number) {\n\t\treturn new Intl.NumberFormat().format(number);\n\t}\n</script>\n\n<tr>\n\t<td class=\"has-text-right\">{block.height}</td>\n\t<td>{new Date(block.timestamp).toISOString().replace('T', ' ')}</td>\n\t<td class=\"has-text-right\">{block.age}</td>\n\t<td class=\"has-text-right\">{block.deltaTime}</td>\n\t<td>{'miner'}</td>\n\t<td class=\"has-text-right\">{formatNumber(block.coinbaseValue)}</td>\n\t<td class=\"has-text-right\">{block.transactionCount}</td>\n\t<td class=\"has-text-right\">{block.size}</td>\n</tr>\n","<script>\n\timport BlocksTableRow from '@components/BlocksTableRow.svelte';\n\n\texport let blocks = [];\n\n\t// blocks = blocks.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n</script>\n\n<table class=\"table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>Height</th>\n\t\t\t<th>Timestamp (UTC)</th>\n\t\t\t<th>Age</th>\n\t\t\t<th>Delta Time</th>\n\t\t\t<th>Miner</th>\n\t\t\t<th>Fees</th>\n\t\t\t<th>Number of Transactions</th>\n\t\t\t<th>Size</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t{#each blocks as block (block.height)}\n\t\t\t<BlocksTableRow {block} />\n\t\t{/each}\n\t</tbody>\n</table>\n\n<style>\n\t.table {\n\t\twidth: 100%;\n\t}\n</style>\n","<script>\n\timport { onMount } from 'svelte';\n\timport BlocksTable from '@components/BlocksTable.svelte';\n\n\timport { nodes } from '@stores/nodeStore.js';\n\n\tlet blocks = [];\n\tlet selectedURL = '';\n\tlet urls = [];\n\tlet error = '';\n\n\t$: if ($nodes) {\n\t\turls = $nodes.map((node) => node.blobServerHTTPAddress);\n\t\tif (!selectedURL && urls.length > 0) {\n\t\t\tselectedURL = urls[0];\n\t\t}\n\t}\n\n\tonMount(async () => {\n\t\tfetchData(selectedURL);\n\t});\n\n\tasync function fetchData(url) {\n\t\ttry {\n\t\t\tif (!url) return;\n\t\t\tconst res = await fetch(`${url}/lastblocks?n=11`); // Get 1 more block than we need to calculate the delta time\n\n\t\t\tconst b = await res.json();\n\n\t\t\t// Calculate delta time which is the time between blocks\n\t\t\tb.forEach((block, i) => {\n\t\t\t\tif (i === b.length - 1) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst prevBlock = b[i + 1];\n\t\t\t\tconst prevBlockTime = new Date(prevBlock.timestamp);\n\t\t\t\tconst blockTime = new Date(block.timestamp);\n\t\t\t\tconst diff = blockTime - prevBlockTime;\n\n\t\t\t\tconst minutes = Math.floor(diff / (1000 * 60));\n\t\t\t\tconst seconds = Math.floor((diff % (1000 * 60)) / 1000);\n\n\t\t\t\tif (minutes > 0) {\n\t\t\t\t\tblock.deltaTime = `${minutes}m${seconds}s`;\n\t\t\t\t} else {\n\t\t\t\t\tblock.deltaTime = `${seconds}s`;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Calculate the age of the block\n\t\t\tb.forEach((block) => {\n\t\t\t\tconst blockTime = new Date(block.timestamp);\n\t\t\t\tconst now = new Date();\n\t\t\t\tconst diff = now - blockTime;\n\n\t\t\t\tconst days = Math.floor(diff / (1000 * 60 * 60 * 24));\n\t\t\t\tconst hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n\t\t\t\tconst minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\n\t\t\t\tconst seconds = Math.floor((diff % (1000 * 60)) / 1000);\n\n\t\t\t\tif (days > 0) {\n\t\t\t\t\tblock.age = `${days}d${hours}h${minutes}m`;\n\t\t\t\t} else if (hours > 0) {\n\t\t\t\t\tblock.age = `${hours}h${minutes}m`;\n\t\t\t\t} else if (minutes > 0) {\n\t\t\t\t\tblock.age = `${minutes}m${seconds}s`;\n\t\t\t\t} else {\n\t\t\t\t\tblock.age = `${seconds}s`;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tblocks = b.slice(0, 10); // Only show the last 10 blocks\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t}\n\t}\n</script>\n\n{#if error}\n\t<p>{error}</p>\n{:else}\n\t<!-- Dropdown for URL selection -->\n\t<div class=\"select\">\n\t\t<select bind:value={selectedURL} on:change={() => fetchData(selectedURL)}>\n\t\t\t<option disabled>Select a URL</option>\n\t\t\t{#each urls as url (url)}\n\t\t\t\t<option value={url}>{url}</option>\n\t\t\t{/each}\n\t\t</select>\n\t</div>\n\n\t<!-- Blocks table -->\n\t<BlocksTable {blocks} />\n{/if}\n"],"names":["ctx"],"mappings":"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"}
