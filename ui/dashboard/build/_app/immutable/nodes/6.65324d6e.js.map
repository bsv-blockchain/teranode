{"version":3,"file":"6.65324d6e.js","sources":["../../../../../../src/routes/treedemo2/testData.js","../../../../../../src/routes/treedemo2/+page.svelte"],"sourcesContent":["import { writable } from 'svelte/store';\n\nexport const error = writable(\"\");\nexport const blocks = writable([\n  {\n    \"hash\": \"20a0af030c51d8f13313bdcd5f7ba2dd362683b080f3b3d54e8eee44f6d7ecf8\",\n    \"previousblockhash\": \"202f911177c040aa7261e3ed3780b12f44378f2951f49878c6caa432cece228c\",\n    \"height\": 72431\n  },\n  {\n    \"hash\": \"202f911177c040aa7261e3ed3780b12f44378f2951f49878c6caa432cece228c\",\n    \"previousblockhash\": \"10e32fd9f6f014198c3447400a796c53c1b8077abbc1613a51541967f9350297\",\n    \"height\": 72430\n  },\n  {\n    \"hash\": \"10a0af030c51d8f13313bdcd5f7ba2dd362683b080f3b3d54e8eee44f6d7ecf8\",\n    \"previousblockhash\": \"102f911177c040aa7261e3ed3780b12f44378f2951f49878c6caa432cece228c\",\n    \"height\": 72431\n  },\n  {\n    \"hash\": \"102f911177c040aa7261e3ed3780b12f44378f2951f49878c6caa432cece228c\",\n    \"previousblockhash\": \"10e32fd9f6f014198c3447400a796c53c1b8077abbc1613a51541967f9350297\",\n    \"height\": 72430\n  },\n  {\n    \"hash\": \"10e32fd9f6f014198c3447400a796c53c1b8077abbc1613a51541967f9350297\",\n    \"previousblockhash\": \"10457e571ac6540c2756115b45b26cb328966c2aa9dc434b2655229d9a17e39a\",\n    \"height\": 72429\n  },\n  {\n    \"hash\": \"10457e571ac6540c2756115b45b26cb328966c2aa9dc434b2655229d9a17e39a\",\n    \"previousblockhash\": \"00a036054e965cb34640aab69d448268a1c0b93c7bf3d55cc1d7dbc7c20f7cef\",\n    \"height\": 72428\n  },\n  {\n    \"hash\": \"00a0af030c51d8f13313bdcd5f7ba2dd362683b080f3b3d54e8eee44f6d7ecf8\",\n    \"previousblockhash\": \"002f911177c040aa7261e3ed3780b12f44378f2951f49878c6caa432cece228c\",\n    \"height\": 72431\n  },\n  {\n    \"hash\": \"002f911177c040aa7261e3ed3780b12f44378f2951f49878c6caa432cece228c\",\n    \"previousblockhash\": \"00e32fd9f6f014198c3447400a796c53c1b8077abbc1613a51541967f9350297\",\n    \"height\": 72430\n  },\n  {\n    \"hash\": \"00e32fd9f6f014198c3447400a796c53c1b8077abbc1613a51541967f9350297\",\n    \"previousblockhash\": \"00457e571ac6540c2756115b45b26cb328966c2aa9dc434b2655229d9a17e39a\",\n    \"height\": 72429\n  },\n  {\n    \"hash\": \"00457e571ac6540c2756115b45b26cb328966c2aa9dc434b2655229d9a17e39a\",\n    \"previousblockhash\": \"00a036054e965cb34640aab69d448268a1c0b93c7bf3d55cc1d7dbc7c20f7cef\",\n    \"height\": 72428\n  },\n  {\n    \"hash\": \"00a036054e965cb34640aab69d448268a1c0b93c7bf3d55cc1d7dbc7c20f7cef\",\n    \"previousblockhash\": \"0023074edfca79d133e0f896bcb959f18ee8a25b52b0c06c1f43a17a94e34f40\",\n    \"height\": 72427\n  },\n  {\n    \"hash\": \"0023074edfca79d133e0f896bcb959f18ee8a25b52b0c06c1f43a17a94e34f40\",\n    \"previousblockhash\": \"00e0f11082deb76ee9d2db699907434fefbf1fd251e70037efa5cd01fc0d9884\",\n    \"height\": 72426\n  },\n  {\n    \"hash\": \"00e0f11082deb76ee9d2db699907434fefbf1fd251e70037efa5cd01fc0d9884\",\n    \"previousblockhash\": \"00182f7661239b21458f109895e3e792db844736580d6839b39f83ebe646e5d5\",\n    \"height\": 72425\n  },\n  {\n    \"hash\": \"00182f7661239b21458f109895e3e792db844736580d6839b39f83ebe646e5d5\",\n    \"previousblockhash\": \"00cf344ff0f814452be44941d3f2ddb12bfa664b5ba184ef53e92803bd6693a4\",\n    \"height\": 72424\n  },\n  {\n    \"hash\": \"00cf344ff0f814452be44941d3f2ddb12bfa664b5ba184ef53e92803bd6693a4\",\n    \"previousblockhash\": \"00de7ab5a797c5d8d720ce79c1be7f01aa8aa3c03d537e1a11a05bc08416aba7\",\n    \"height\": 72423\n  },\n  {\n    \"hash\": \"00de7ab5a797c5d8d720ce79c1be7f01aa8aa3c03d537e1a11a05bc08416aba7\",\n    \"previousblockhash\": \"008e5cc610d607c8c8874c3a35e274a8c848a0e4c78b805352c3dab7fb4bd2a0\",\n    \"height\": 72422\n  }\n]);","<script>\n\t// import { blocks, error } from '@stores/nodeStore.js';\n\timport { blocks, error } from './testData.js';\n\timport { onMount } from 'svelte';\n\n\tfunction getUniqueValues(obj) {\n\t\tlet values = [];\n\t\tfor (let key in obj) {\n\t\t\tvalues = values.concat(obj[key]);\n\t\t}\n\t\treturn [...new Set(values)];\n\t}\n\n\tfunction createHierarchy(arr) {\n\t\tconst nodeMap = {};\n\n\t\tarr.forEach((item) => {\n\t\t\t// Create or get the current node\n\t\t\tif (!nodeMap[item.hash]) {\n\t\t\t\tnodeMap[item.hash] = {\n\t\t\t\t\tname: item.hash,\n\t\t\t\t\theight: item.height,\n\t\t\t\t\tchildren: []\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst currentNode = nodeMap[item.hash];\n\n\t\t\t// If there's no previous block hash, skip linking it to any parent\n\t\t\tif (!item.previousblockhash) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Create or get the parent node\n\t\t\tif (!nodeMap[item.previousblockhash]) {\n\t\t\t\tnodeMap[item.previousblockhash] = {\n\t\t\t\t\tname: item.previousblockhash,\n\t\t\t\t\theight: item.height - 1, // Assuming the height of parent is always current height - 1\n\t\t\t\t\tchildren: []\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst parentNode = nodeMap[item.previousblockhash];\n\n\t\t\t// Link the current node to its parent\n\t\t\tparentNode.children.push(currentNode);\n\t\t});\n\n\t\t// Find the actual root node (the node that isn't a child of any other node)\n\t\tconst rootNode = Object.values(nodeMap).find(\n\t\t\t(node) => !arr.some((item) => item.hash === node.name)\n\t\t);\n\n\t\treturn rootNode || {};\n\t}\n\n\tlet unique = [];\n\n\tonMount(() => {\n\t\tconst width = 600;\n\t\tconst height = 400;\n\n\t\tconst svg = d3.select('#tree').append('svg').attr('width', '100%').attr('height', '100vh');\n\n\t\tunique = getUniqueValues($blocks);\n\n\t\tconst treeData = createHierarchy(unique);\n\n\t\tconst root = d3.hierarchy(treeData);\n\t\tconst treeLayout = d3\n\t\t\t.tree()\n\t\t\t.size([height - 100, width])\n\t\t\t.separation((a, b) => {\n\t\t\t\treturn a.parent == b.parent ? 2 : 3; // Increase these values for more spacing\n\t\t\t});\n\n\t\ttreeLayout(root);\n\n\t\tconst g = svg.append('g').attr('transform', 'translate(100,0)');\n\n\t\tconst link = g\n\t\t\t.selectAll('.link')\n\t\t\t.data(root.descendants().slice(1))\n\t\t\t.enter()\n\t\t\t.append('path')\n\t\t\t.attr('class', 'link')\n\t\t\t.attr('d', (d) => {\n\t\t\t\treturn (\n\t\t\t\t\t'M' +\n\t\t\t\t\td.y +\n\t\t\t\t\t',' +\n\t\t\t\t\td.x +\n\t\t\t\t\t'C' +\n\t\t\t\t\t(d.y + d.parent.y) / 2 +\n\t\t\t\t\t',' +\n\t\t\t\t\td.x +\n\t\t\t\t\t' ' +\n\t\t\t\t\t(d.y + d.parent.y) / 2 +\n\t\t\t\t\t',' +\n\t\t\t\t\td.parent.x +\n\t\t\t\t\t' ' +\n\t\t\t\t\td.parent.y +\n\t\t\t\t\t',' +\n\t\t\t\t\td.parent.x\n\t\t\t\t);\n\t\t\t});\n\n\t\tconst node = g\n\t\t\t.selectAll('.node')\n\t\t\t.data(root.descendants())\n\t\t\t.enter()\n\t\t\t.append('g')\n\t\t\t.attr('class', (d) => 'node' + (d.children ? ' node--internal' : ' node--leaf'))\n\t\t\t.attr('transform', (d) => 'translate(' + d.y + ',' + d.x + ')');\n\n\t\tnode\n\t\t\t.append('rect')\n\t\t\t.attr('width', 40) // adjust as needed\n\t\t\t.attr('height', 35) // adjust as needed\n\t\t\t.attr('x', -30) // centers the rectangle\n\t\t\t.attr('y', -15) // centers the rectangle\n\t\t\t.append('title')\n\t\t\t.text((d) => d.data.name);\n\n\t\t// Text for d.data.name.substring(0, 6)\n\t\tnode\n\t\t\t.append('text')\n\t\t\t.attr('dy', -5) // adjust as needed\n\t\t\t.attr('dx', -10) // adjust to center the text within the rectangle\n\t\t\t.style('text-anchor', 'middle')\n\t\t\t.text((d) => d.data.name.substring(0, 6));\n\n\t\t// Text for height\n\t\tnode\n\t\t\t.append('text')\n\t\t\t.attr('dy', 15) // adjust as needed\n\t\t\t.attr('dx', -10) // adjust to center the text within the rectangle\n\t\t\t.style('text-anchor', 'middle')\n\t\t\t.text((d) => d.data.height);\n\t});\n</script>\n\n<div class=\"full\">\n\t{#if $error}\n\t\t<p>{$error}</p>\n\t{:else}\n\t\t<section class=\"section\">\n\t\t\t<div class=\"field\">Last 10 blocks from demo data</div>\n\t\t\t<div class=\"full\" id=\"tree\" />\n\n\t\t\t<pre>{JSON.stringify(unique, null, 2)}</pre>\n\t\t</section>\n\t{/if}\n</div>\n\n<style>\n\t.full {\n\t\twidth: 100%;\n\t\theight: 100vh;\n\t}\n\n\t:global(.link) {\n\t\tfill: none;\n\t\tstroke: #555;\n\t\tstroke-opacity: 0.4;\n\t\tstroke-width: 2;\n\t}\n\n\t:global(.node rect) {\n\t\tfill: #e6e6e6; /* Light grey fill for better visibility of text */\n\t\tstroke: #555;\n\t\tstroke-width: 2px;\n\t}\n\n\t:global(.node text) {\n\t\tfont-size: 10px;\n\t\tfill: #333; /* Darker text color for better contrast against light rectangle background */\n\t}\n</style>\n"],"names":["ctx"],"mappings":"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"}
