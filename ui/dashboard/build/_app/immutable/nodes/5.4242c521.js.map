{"version":3,"file":"5.4242c521.js","sources":["../../../../../../src/routes/tree/+page.svelte"],"sourcesContent":["<script>\n\timport { nodes, loading, blocks } from '@stores/nodeStore.js';\n\timport Spinner from '@components/Spinner.svelte';\n\n\tfunction getUniqueValues(obj) {\n\t\tlet values = [];\n\t\tfor (let key in obj) {\n\t\t\tvalues = values.concat(obj[key]);\n\t\t}\n\t\treturn [...new Set(values)];\n\t}\n\n\tlet localLoading = false;\n\n\tfunction createHierarchy(arr) {\n\t\tconst nodeMap = {};\n\n\t\tarr.forEach((item) => {\n\t\t\t// Create or get the current node\n\t\t\tif (!nodeMap[item.hash]) {\n\t\t\t\tnodeMap[item.hash] = {\n\t\t\t\t\tname: item.hash,\n\t\t\t\t\theight: item.height,\n\t\t\t\t\tchildren: []\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst currentNode = nodeMap[item.hash];\n\n\t\t\t// If there's no previous block hash, skip linking it to any parent\n\t\t\tif (!item.previousblockhash) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Create or get the parent node\n\t\t\tif (!nodeMap[item.previousblockhash]) {\n\t\t\t\tnodeMap[item.previousblockhash] = {\n\t\t\t\t\tname: item.previousblockhash,\n\t\t\t\t\theight: item.height - 1, // Assuming the height of parent is always current height - 1\n\t\t\t\t\tchildren: []\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst parentNode = nodeMap[item.previousblockhash];\n\n\t\t\t// Link the current node to its parent\n\t\t\tparentNode.children.push(currentNode);\n\t\t});\n\n\t\t// Find the actual root node (the node that isn't a child of any other node)\n\t\tconst rootNode = Object.values(nodeMap).find(\n\t\t\t(node) => !arr.some((item) => item.hash === node.name)\n\t\t);\n\n\t\treturn rootNode || {};\n\t}\n\n\tlet unique = [];\n\n\t$: if (Object.keys($blocks).length > 0) {\n\t\ttry {\n\t\t\tconst width = 600;\n\t\t\tconst height = 400;\n\n\t\t\tlocalLoading = true;\n\t\t\tunique = getUniqueValues($blocks);\n\t\t\tconst treeData = createHierarchy(unique);\n\n\t\t\t// Remove previous SVG content\n\t\t\td3.select('#tree').select('svg').remove();\n\n\t\t\tconst svg = d3.select('#tree').append('svg').attr('width', '100%').attr('height', '100%');\n\n\t\t\tconst root = d3.hierarchy(treeData);\n\t\t\tconst treeLayout = d3.tree().size([height - 200, width]);\n\n\t\t\ttreeLayout(root);\n\n\t\t\tconst g = svg.append('g').attr('transform', 'translate(100,0)');\n\n\t\t\tconst link = g\n\t\t\t\t.selectAll('.link')\n\t\t\t\t.data(root.descendants().slice(1))\n\t\t\t\t.enter()\n\t\t\t\t.append('path')\n\t\t\t\t.attr('class', 'link')\n\t\t\t\t.attr('d', (d) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t'M' +\n\t\t\t\t\t\td.y +\n\t\t\t\t\t\t',' +\n\t\t\t\t\t\td.x +\n\t\t\t\t\t\t'C' +\n\t\t\t\t\t\t(d.y + d.parent.y) / 2 +\n\t\t\t\t\t\t',' +\n\t\t\t\t\t\td.x +\n\t\t\t\t\t\t' ' +\n\t\t\t\t\t\t(d.y + d.parent.y) / 2 +\n\t\t\t\t\t\t',' +\n\t\t\t\t\t\td.parent.x +\n\t\t\t\t\t\t' ' +\n\t\t\t\t\t\td.parent.y +\n\t\t\t\t\t\t',' +\n\t\t\t\t\t\td.parent.x\n\t\t\t\t\t);\n\t\t\t\t});\n\n\t\t\tconst node = g\n\t\t\t\t.selectAll('.node')\n\t\t\t\t.data(root.descendants())\n\t\t\t\t.enter()\n\t\t\t\t.append('g')\n\t\t\t\t.attr('class', (d) => 'node' + (d.children ? ' node--internal' : ' node--leaf'))\n\t\t\t\t.attr('transform', (d) => 'translate(' + d.y + ',' + d.x + ')');\n\n\t\t\tnode\n\t\t\t\t.append('circle')\n\t\t\t\t.attr('r', 10)\n\t\t\t\t.append('title')\n\t\t\t\t.text((d) => d.data.name);\n\t\t\tnode\n\t\t\t\t.append('text')\n\t\t\t\t.attr('dy', 30)\n\t\t\t\t.attr('x', -15)\n\t\t\t\t.style('text-anchor', (d) => (d.children ? 'start' : 'start'))\n\t\t\t\t// .text((d) => d.data.name.substring(0, 6));\n\t\t\t\t.text((d) => d.data.height);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t} finally {\n\t\t\tlocalLoading = false;\n\t\t}\n\t}\n</script>\n\n<div class=\"full\">\n\t{#if localLoading || ($nodes.length === 0 && $loading)}\n\t\t<Spinner />\n\t{/if}\n\t<section class=\"section\">\n\t\t<div class=\"field\">\n\t\t\tLast 10 blocks from {$nodes.length} connected nodes\n\t\t</div>\n\t\t<div class=\"full\">\n\t\t\t<div id=\"tree\" />\n\t\t</div>\n\n\t\t<pre>{JSON.stringify(unique, null, 2)}</pre>\n\t</section>\n</div>\n\n<style>\n\t.full {\n\t\twidth: 100%;\n\t\theight: 100vh;\n\t}\n\n\t:global(.link) {\n\t\tfill: none;\n\t\tstroke: #555;\n\t\tstroke-opacity: 0.4;\n\t\tstroke-width: 2;\n\t}\n\t:global(.node circle) {\n\t\tfill: #999;\n\t\tstroke: #555;\n\t\tstroke-width: 2px;\n\t}\n\t:global(.node text) {\n\t\tfont-size: 10px;\n\t}\n</style>\n"],"names":["ctx"],"mappings":"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"}
