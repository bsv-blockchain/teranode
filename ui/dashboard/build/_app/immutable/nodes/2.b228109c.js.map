{"version":3,"file":"2.b228109c.js","sources":["../../../../../../src/components/ConnectedNodes.svelte","../../../../../../src/components/ChaintipTrackerNode.svelte","../../../../../../src/components/ChaintipTracker.svelte","../../../../../../src/routes/+page.svelte"],"sourcesContent":["<script>\n\timport { nodes, loading, error } from '@stores/nodeStore.js';\n\timport Spinner from '@components/Spinner.svelte';\n\n\tfunction humanTime(time) {\n\t\tlet diff = new Date().getTime() - new Date(time).getTime();\n\t\tdiff = diff / 1000;\n\t\tconst days = Math.floor(diff / 86400);\n\t\tconst hours = Math.floor((diff % 86400) / 3600);\n\t\tconst minutes = Math.floor(((diff % 86400) % 3600) / 60);\n\t\tconst seconds = Math.floor(((diff % 86400) % 3600) % 60);\n\n\t\tlet difference = '';\n\n\t\tif (days > 0) {\n\t\t\tdifference += days;\n\t\t\tdifference += ' day' + (days === 1 ? ', ' : 's, ');\n\t\t\tdifference += hours;\n\t\t\tdifference += ' hour' + (hours === 1 ? ', ' : 's, ');\n\t\t\tdifference += minutes;\n\t\t\tdifference += ' minute' + (minutes === 1 ? ' and ' : 's and ');\n\t\t\tdifference += seconds;\n\t\t\tdifference += ' second' + (seconds === 1 ? '' : 's');\n\t\t\treturn difference;\n\t\t}\n\n\t\tif (hours > 0) {\n\t\t\tdifference += hours;\n\t\t\tdifference += ' hour' + (hours === 1 ? ', ' : 's, ');\n\t\t\tdifference += minutes;\n\t\t\tdifference += ' minute' + (minutes === 1 ? ' and ' : 's and ');\n\t\t\tdifference += seconds;\n\t\t\tdifference += ' second' + (seconds === 1 ? '' : 's');\n\t\t\treturn difference;\n\t\t}\n\n\t\tif (minutes > 0) {\n\t\t\tdifference += minutes;\n\t\t\tdifference += ' minute' + (minutes === 1 ? ' and ' : 's and ');\n\t\t\tdifference += seconds;\n\t\t\tdifference += ' second' + (seconds === 1 ? '' : 's');\n\t\t\treturn difference;\n\t\t}\n\n\t\tif (seconds > 0) {\n\t\t\tdifference += seconds;\n\t\t\tdifference += ' second' + (seconds === 1 ? '' : 's');\n\t\t\treturn difference;\n\t\t}\n\n\t\treturn '0 seconds';\n\t}\n</script>\n\n<div class=\"card panel\">\n\t<header class=\"card-header\">\n\t\t<p class=\"card-header-title\">Connected nodes</p>\n\t</header>\n\t<div class=\"card-content\">\n\t\t{#if $error}\n\t\t\t<p>Error fetching nodes: {$error}</p>\n\t\t{:else if $nodes.length === 0}\n\t\t\t<p>No nodes connected</p>\n\t\t\t{#if $loading}\n\t\t\t\t<Spinner />\n\t\t\t{/if}\n\t\t{:else}\n\t\t\t<table class=\"table\">\n\t\t\t\t<tbody>\n\t\t\t\t\t{#each $nodes as node (node.ip)}\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>{node.blobServerHTTPAddress || 'anonymous'}</td>\n\t\t\t\t\t\t\t<td>{node.source}</td>\n\t\t\t\t\t\t\t<td>{node.name}</td>\n\t\t\t\t\t\t\t<td>{node.ip}</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tConnected at {new Date(node.connectedAt).toISOString().replace('T', ' ')}\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<span class=\"small\">{humanTime(node.connectedAt)} ago</span>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t{/each}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t{/if}\n\t</div>\n\t<!-- <footer class=\"card-footer\">\n\t\t<a class=\"card-footer-item\">Action 1</a>\n\t\t<a class=\"card-footer-item\">Action 2</a>\n\t</footer> -->\n</div>\n\n<style>\n\t.table {\n\t\twidth: 100%; /* Make the table take the full width of the card */\n\t\tborder-collapse: collapse; /* Collapse table borders */\n\t}\n\n\t.table td {\n\t\tvertical-align: middle;\n\t\tpadding-top: 2px;\n\t\tpadding-bottom: 2px;\n\t}\n\n\t.table tr:nth-child(even) {\n\t\tbackground-color: #f9f9f9; /* Zebra-striping for even rows */\n\t}\n\n\t.small {\n\t\tfont-size: 0.8em; /* Make the text smaller */\n\t}\n</style>\n","<script>\n\texport let node;\n\n\tfunction shortHash(hash) {\n\t\tif (!hash) return '';\n\n\t\treturn hash.substring(0, 8) + '...' + hash.substring(hash.length - 8);\n\t}\n</script>\n\n<tr>\n\t<td>{node.source || 'anonymous'}</td>\n\t<td>{node.name}</td>\n\t<td>{node.blobServerHTTPAddress}</td>\n\t<td class=\"right\">{node.header.height}</td>\n\t<td title={node.header.hash}>{shortHash(node.header.hash)}</td>\n\t<td title={node.header.previousblockhash}>{shortHash(node.header.previousblockhash)}</td>\n</tr>\n\n<style>\n\ttd {\n\t\tborder: 1px solid #e5e5e5; /* Add a light border to table cells */\n\t\tpadding: 8px 12px; /* Add some padding to table cells */\n\t}\n\n\t.right {\n\t\ttext-align: right;\n\t}\n</style>\n","<script>\n\timport { nodes, error } from '@stores/nodeStore.js';\n\timport Node from './ChaintipTrackerNode.svelte';\n</script>\n\n<div class=\"card panel\">\n\t<header class=\"card-header\">\n\t\t<p class=\"card-header-title\">Chaintip tracker</p>\n\t</header>\n\t<div class=\"card-content\">\n\t\t{#if $error}\n\t\t\t<p>{$error}</p>\n\t\t{:else}\n\t\t\t<table class=\"table\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Source</th>\n\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t<th>Address</th>\n\t\t\t\t\t\t<th class=\"right\">Height</th>\n\t\t\t\t\t\t<th>Latest hash</th>\n\t\t\t\t\t\t<th>Previous hash</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{#each $nodes as node (node.ip)}\n\t\t\t\t\t\t{#if node.blobServerHTTPAddress}\n\t\t\t\t\t\t\t<Node {node} />\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t{/each}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t{/if}\n\t</div>\n\t<!-- <footer class=\"card-footer\">\n\t\t<a class=\"card-footer-item\">Action 1</a>\n\t\t<a class=\"card-footer-item\">Action 2</a>\n\t</footer> -->\n</div>\n\n<style>\n\t.right {\n\t\ttext-align: right;\n\t}\n\n\t.panel {\n\t\tmargin: 20px; /* Adjust as needed */\n\t}\n\n\t/* Custom styles for the table inside card-content */\n\t.card-content .table {\n\t\twidth: 100%; /* Make the table take the full width of the card */\n\t\tborder-collapse: collapse; /* Collapse table borders */\n\t}\n\n\t.card-content .table th,\n\t.card-content .table th {\n\t\tbackground-color: #f5f5f5; /* Light background for table headers */\n\t\ttext-align: left; /* Align header text to the left */\n\t}\n\n\t.card-content .table tr:nth-child(even) {\n\t\tbackground-color: #f9f9f9; /* Zebra-striping for even rows */\n\t}\n</style>\n","<script>\n\timport ConnectedNodes from '@components/ConnectedNodes.svelte';\n\timport ChaintipTracker from '@components/ChaintipTracker.svelte';\n</script>\n\n<div>\n\t<ConnectedNodes />\n\t<ChaintipTracker />\n</div>\n"],"names":["ctx"],"mappings":"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"}
