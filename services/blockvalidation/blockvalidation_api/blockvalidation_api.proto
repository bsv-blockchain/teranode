syntax = "proto3";

option go_package = "./;blockvalidation_api";

package blockvalidation_api;

import "google/protobuf/timestamp.proto";

service BlockValidationAPI {
  // Health returns the health of the API.
  rpc HealthGRPC (EmptyMessage) returns (HealthResponse) {}
  rpc BlockFound (BlockFoundRequest) returns (EmptyMessage) {}
  rpc ProcessBlock (ProcessBlockRequest) returns (EmptyMessage) {}
  rpc ValidateBlock (ValidateBlockRequest) returns (ValidateBlockResponse) {}
}

// swagger:model EmptyMessage
message EmptyMessage {}

// swagger:model HealthResponse
message HealthResponse {
  bool ok = 1;
  string details = 2;
  google.protobuf.Timestamp timestamp = 3;
}

// swagger:model BlockFoundRequest
message BlockFoundRequest {
  bytes hash = 1;
  string base_url = 2;
  bool wait_to_complete = 3;
  string peer_id = 4; // P2P peer identifier for peerMetrics tracking
}

// swagger:model ProcessBlockRequest
message ProcessBlockRequest {
  bytes block = 1;
  uint32 height = 2;
  string base_url = 3;
  string peer_id = 4; // P2P peer identifier for peerMetrics tracking
}

// swagger:model ValidateBlockRequest
message ValidateBlockRequest {
  bytes block = 1;
  uint32 height = 2;
}

// swagger:model ValidateBlockResponse
message ValidateBlockResponse {
  bool ok = 1;
  string message = 2;
}
