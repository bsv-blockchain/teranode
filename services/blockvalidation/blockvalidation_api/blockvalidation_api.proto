syntax = "proto3";

option go_package = "./;blockvalidation_api";

package blockvalidation_api;

import "google/protobuf/timestamp.proto";

service BlockValidationAPI {
  // Health returns the health of the API.
  rpc HealthGRPC (EmptyMessage) returns (HealthResponse) {}
  rpc BlockFound (BlockFoundRequest) returns (EmptyMessage) {}
  rpc SubtreeFound (SubtreeFoundRequest) returns (EmptyMessage) {}
  rpc ProcessBlock (ProcessBlockRequest) returns (EmptyMessage) {}
  rpc Get (GetSubtreeRequest) returns (GetSubtreeResponse) {}
  rpc Exists (ExistsSubtreeRequest) returns (ExistsSubtreeResponse) {}
  rpc SetTxMeta (SetTxMetaRequest) returns (SetTxMetaResponse) {}
  rpc DelTxMeta (DelTxMetaRequest) returns (DelTxMetaResponse) {}
  rpc SetMinedMulti (SetMinedMultiRequest) returns (SetMinedMultiResponse) {}
}

// swagger:model EmptyMessage
message EmptyMessage {}

// swagger:model HealthResponse
message HealthResponse {
  bool ok = 1;
  string details = 2;
  google.protobuf.Timestamp timestamp = 3;
}

// swagger:model BlockFoundRequest
message BlockFoundRequest {
  bytes hash = 1;
  string base_url = 2;
  bool wait_to_complete = 3;
}

// swagger:model SubtreeFoundRequest
message SubtreeFoundRequest {
  bytes hash = 1;
  string base_url = 2;
}

// swagger:model ProcessBlockRequest
message ProcessBlockRequest {
  bytes block = 1;
  uint32 height = 2;
}

// swagger:model GetSubtreeRequest
message GetSubtreeRequest {
  bytes hash = 1;
}

// swagger:model GetSubtreeResponse
message GetSubtreeResponse {
  bytes subtree = 1;
}

// swagger:model ExistsSubtreeRequest
message ExistsSubtreeRequest {
  bytes hash = 1;
}

// swagger:model ExistsSubtreeResponse
message ExistsSubtreeResponse {
  bool exists = 1;
}

// swagger:model SetTxMetaRequest
message SetTxMetaRequest {
  repeated bytes data = 1;
}

// swagger:model SetTxMetaResponse
message SetTxMetaResponse {
  bool ok = 1;
}

// swagger:model DelTxMetaRequest
message DelTxMetaRequest {
  bytes hash = 1;
}

// swagger:model DelTxMetaResponse
message DelTxMetaResponse {
  bool ok = 1;
}

// swagger:model SetMinedMultiRequest
message SetMinedMultiRequest {
  uint32 block_id = 1;
  repeated bytes hashes = 2;
}

// swagger:model SetMinedMultiResponse
message SetMinedMultiResponse {
  bool ok = 1;
}
