syntax = "proto3";

option go_package = ".;blockvalidation_api";

package blockvalidation_api;

service BlockValidationAPI {
  // Health returns the health of the API.
  rpc HealthGRPC (EmptyMessage) returns (HealthResponse) {}
  rpc BlockFound (BlockFoundRequest) returns (EmptyMessage) {}
  rpc SubtreeFound (SubtreeFoundRequest) returns (EmptyMessage) {}
  rpc Get (GetSubtreeRequest) returns (GetSubtreeResponse) {}
  rpc SetTxMeta (SetTxMetaRequest) returns (SetTxMetaResponse) {}
}

// swagger:model EmptyMessage
message EmptyMessage {}

// swagger:model HealthResponse
message HealthResponse {
  bool ok = 1;
  string details = 2;
  uint32 timestamp = 3;
}

// swagger:model BlockFoundRequest
message BlockFoundRequest {
  bytes hash = 1;
  string base_url = 2;
}

// swagger:model SubtreeFoundRequest
message SubtreeFoundRequest {
  bytes hash = 1;
  string base_url = 2;
}

// swagger:model GetSubtreeRequest
message GetSubtreeRequest {
  bytes hash = 1;
}

// swagger:model GetSubtreeResponse
message GetSubtreeResponse {
  bytes subtree = 1;
}

// swagger:model SetTxMetaRequest
message SetTxMetaRequest {
  repeated bytes data = 1;
}

// swagger:model SetTxMetaResponse
message SetTxMetaResponse {
  bool ok = 1;
}
