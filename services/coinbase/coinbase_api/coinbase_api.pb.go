// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.1
// source: services/coinbase/coinbase_api/coinbase_api.proto

package coinbase_api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// swagger:model HealthResponse
type HealthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok        bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Details   string                 `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_coinbase_coinbase_api_coinbase_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_coinbase_coinbase_api_coinbase_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_services_coinbase_coinbase_api_coinbase_api_proto_rawDescGZIP(), []int{0}
}

func (x *HealthResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *HealthResponse) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *HealthResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// swagger:model RequestFundsRequest
type RequestFundsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address           string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	DisableDistribute bool   `protobuf:"varint,2,opt,name=disableDistribute,proto3" json:"disableDistribute,omitempty"`
}

func (x *RequestFundsRequest) Reset() {
	*x = RequestFundsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_coinbase_coinbase_api_coinbase_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestFundsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestFundsRequest) ProtoMessage() {}

func (x *RequestFundsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_coinbase_coinbase_api_coinbase_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestFundsRequest.ProtoReflect.Descriptor instead.
func (*RequestFundsRequest) Descriptor() ([]byte, []int) {
	return file_services_coinbase_coinbase_api_coinbase_api_proto_rawDescGZIP(), []int{1}
}

func (x *RequestFundsRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *RequestFundsRequest) GetDisableDistribute() bool {
	if x != nil {
		return x.DisableDistribute
	}
	return false
}

// swagger:model RequestFundsResponse
type RequestFundsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tx []byte `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
}

func (x *RequestFundsResponse) Reset() {
	*x = RequestFundsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_coinbase_coinbase_api_coinbase_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestFundsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestFundsResponse) ProtoMessage() {}

func (x *RequestFundsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_coinbase_coinbase_api_coinbase_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestFundsResponse.ProtoReflect.Descriptor instead.
func (*RequestFundsResponse) Descriptor() ([]byte, []int) {
	return file_services_coinbase_coinbase_api_coinbase_api_proto_rawDescGZIP(), []int{2}
}

func (x *RequestFundsResponse) GetTx() []byte {
	if x != nil {
		return x.Tx
	}
	return nil
}

// swagger:model DistributeTransactionRequest
type DistributeTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tx []byte `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
}

func (x *DistributeTransactionRequest) Reset() {
	*x = DistributeTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_coinbase_coinbase_api_coinbase_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributeTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributeTransactionRequest) ProtoMessage() {}

func (x *DistributeTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_coinbase_coinbase_api_coinbase_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributeTransactionRequest.ProtoReflect.Descriptor instead.
func (*DistributeTransactionRequest) Descriptor() ([]byte, []int) {
	return file_services_coinbase_coinbase_api_coinbase_api_proto_rawDescGZIP(), []int{3}
}

func (x *DistributeTransactionRequest) GetTx() []byte {
	if x != nil {
		return x.Tx
	}
	return nil
}

// swagger:model ResponseWrapper
type ResponseWrapper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address       string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	DurationNanos int64  `protobuf:"varint,2,opt,name=durationNanos,proto3" json:"durationNanos,omitempty"`
	Retries       int32  `protobuf:"varint,3,opt,name=retries,proto3" json:"retries,omitempty"`
	Error         string `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ResponseWrapper) Reset() {
	*x = ResponseWrapper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_coinbase_coinbase_api_coinbase_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseWrapper) ProtoMessage() {}

func (x *ResponseWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_services_coinbase_coinbase_api_coinbase_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseWrapper.ProtoReflect.Descriptor instead.
func (*ResponseWrapper) Descriptor() ([]byte, []int) {
	return file_services_coinbase_coinbase_api_coinbase_api_proto_rawDescGZIP(), []int{4}
}

func (x *ResponseWrapper) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ResponseWrapper) GetDurationNanos() int64 {
	if x != nil {
		return x.DurationNanos
	}
	return 0
}

func (x *ResponseWrapper) GetRetries() int32 {
	if x != nil {
		return x.Retries
	}
	return 0
}

func (x *ResponseWrapper) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// swagger:model DistributeTransactionResponse
type DistributeTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid      string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Responses []*ResponseWrapper     `protobuf:"bytes,3,rep,name=responses,proto3" json:"responses,omitempty"`
}

func (x *DistributeTransactionResponse) Reset() {
	*x = DistributeTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_coinbase_coinbase_api_coinbase_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributeTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributeTransactionResponse) ProtoMessage() {}

func (x *DistributeTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_coinbase_coinbase_api_coinbase_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributeTransactionResponse.ProtoReflect.Descriptor instead.
func (*DistributeTransactionResponse) Descriptor() ([]byte, []int) {
	return file_services_coinbase_coinbase_api_coinbase_api_proto_rawDescGZIP(), []int{5}
}

func (x *DistributeTransactionResponse) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *DistributeTransactionResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *DistributeTransactionResponse) GetResponses() []*ResponseWrapper {
	if x != nil {
		return x.Responses
	}
	return nil
}

// swagger:model GetBalanceResponse
type GetBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumberOfUtxos uint64 `protobuf:"varint,1,opt,name=number_of_utxos,json=numberOfUtxos,proto3" json:"number_of_utxos,omitempty"`
	TotalSatoshis uint64 `protobuf:"varint,2,opt,name=total_satoshis,json=totalSatoshis,proto3" json:"total_satoshis,omitempty"`
}

func (x *GetBalanceResponse) Reset() {
	*x = GetBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_coinbase_coinbase_api_coinbase_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceResponse) ProtoMessage() {}

func (x *GetBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_coinbase_coinbase_api_coinbase_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetBalanceResponse) Descriptor() ([]byte, []int) {
	return file_services_coinbase_coinbase_api_coinbase_api_proto_rawDescGZIP(), []int{6}
}

func (x *GetBalanceResponse) GetNumberOfUtxos() uint64 {
	if x != nil {
		return x.NumberOfUtxos
	}
	return 0
}

func (x *GetBalanceResponse) GetTotalSatoshis() uint64 {
	if x != nil {
		return x.TotalSatoshis
	}
	return 0
}

var File_services_coinbase_coinbase_api_coinbase_api_proto protoreflect.FileDescriptor

var file_services_coinbase_coinbase_api_coinbase_api_proto_rawDesc = []byte{
	0x0a, 0x31, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x62,
	0x61, 0x73, 0x65, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x70,
	0x69, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x74, 0x0a, 0x0e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f,
	0x6b, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x5d, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x11, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x22, 0x26, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46,
	0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x74, 0x78, 0x22, 0x2e, 0x0a, 0x1c,
	0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x74, 0x78, 0x22, 0x81, 0x01, 0x0a,
	0x0f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6e, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6e, 0x6f, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0xaa, 0x01, 0x0a, 0x1d, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x3b, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70,
	0x65, 0x72, 0x52, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22, 0x63, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66,
	0x5f, 0x75, 0x74, 0x78, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x61, 0x74, 0x6f, 0x73, 0x68, 0x69, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x61, 0x74, 0x6f, 0x73, 0x68,
	0x69, 0x73, 0x32, 0xea, 0x02, 0x0a, 0x0b, 0x43, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x41,
	0x50, 0x49, 0x12, 0x44, 0x0a, 0x0a, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x47, 0x52, 0x50, 0x43,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1c, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x21, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46,
	0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x6f,
	0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x72, 0x0a, 0x15, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x63, 0x6f, 0x69,
	0x6e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x20, 0x2e, 0x63, 0x6f,
	0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x11, 0x5a, 0x0f, 0x2e, 0x2f, 0x3b, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61,
	0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_services_coinbase_coinbase_api_coinbase_api_proto_rawDescOnce sync.Once
	file_services_coinbase_coinbase_api_coinbase_api_proto_rawDescData = file_services_coinbase_coinbase_api_coinbase_api_proto_rawDesc
)

func file_services_coinbase_coinbase_api_coinbase_api_proto_rawDescGZIP() []byte {
	file_services_coinbase_coinbase_api_coinbase_api_proto_rawDescOnce.Do(func() {
		file_services_coinbase_coinbase_api_coinbase_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_coinbase_coinbase_api_coinbase_api_proto_rawDescData)
	})
	return file_services_coinbase_coinbase_api_coinbase_api_proto_rawDescData
}

var file_services_coinbase_coinbase_api_coinbase_api_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_services_coinbase_coinbase_api_coinbase_api_proto_goTypes = []any{
	(*HealthResponse)(nil),                // 0: coinbase_api.HealthResponse
	(*RequestFundsRequest)(nil),           // 1: coinbase_api.RequestFundsRequest
	(*RequestFundsResponse)(nil),          // 2: coinbase_api.RequestFundsResponse
	(*DistributeTransactionRequest)(nil),  // 3: coinbase_api.DistributeTransactionRequest
	(*ResponseWrapper)(nil),               // 4: coinbase_api.ResponseWrapper
	(*DistributeTransactionResponse)(nil), // 5: coinbase_api.DistributeTransactionResponse
	(*GetBalanceResponse)(nil),            // 6: coinbase_api.GetBalanceResponse
	(*timestamppb.Timestamp)(nil),         // 7: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                 // 8: google.protobuf.Empty
}
var file_services_coinbase_coinbase_api_coinbase_api_proto_depIdxs = []int32{
	7, // 0: coinbase_api.HealthResponse.timestamp:type_name -> google.protobuf.Timestamp
	7, // 1: coinbase_api.DistributeTransactionResponse.timestamp:type_name -> google.protobuf.Timestamp
	4, // 2: coinbase_api.DistributeTransactionResponse.responses:type_name -> coinbase_api.ResponseWrapper
	8, // 3: coinbase_api.CoinbaseAPI.HealthGRPC:input_type -> google.protobuf.Empty
	1, // 4: coinbase_api.CoinbaseAPI.RequestFunds:input_type -> coinbase_api.RequestFundsRequest
	3, // 5: coinbase_api.CoinbaseAPI.DistributeTransaction:input_type -> coinbase_api.DistributeTransactionRequest
	8, // 6: coinbase_api.CoinbaseAPI.GetBalance:input_type -> google.protobuf.Empty
	0, // 7: coinbase_api.CoinbaseAPI.HealthGRPC:output_type -> coinbase_api.HealthResponse
	2, // 8: coinbase_api.CoinbaseAPI.RequestFunds:output_type -> coinbase_api.RequestFundsResponse
	5, // 9: coinbase_api.CoinbaseAPI.DistributeTransaction:output_type -> coinbase_api.DistributeTransactionResponse
	6, // 10: coinbase_api.CoinbaseAPI.GetBalance:output_type -> coinbase_api.GetBalanceResponse
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_services_coinbase_coinbase_api_coinbase_api_proto_init() }
func file_services_coinbase_coinbase_api_coinbase_api_proto_init() {
	if File_services_coinbase_coinbase_api_coinbase_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_services_coinbase_coinbase_api_coinbase_api_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*HealthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_coinbase_coinbase_api_coinbase_api_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*RequestFundsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_coinbase_coinbase_api_coinbase_api_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*RequestFundsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_coinbase_coinbase_api_coinbase_api_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*DistributeTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_coinbase_coinbase_api_coinbase_api_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ResponseWrapper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_coinbase_coinbase_api_coinbase_api_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DistributeTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_coinbase_coinbase_api_coinbase_api_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_coinbase_coinbase_api_coinbase_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_coinbase_coinbase_api_coinbase_api_proto_goTypes,
		DependencyIndexes: file_services_coinbase_coinbase_api_coinbase_api_proto_depIdxs,
		MessageInfos:      file_services_coinbase_coinbase_api_coinbase_api_proto_msgTypes,
	}.Build()
	File_services_coinbase_coinbase_api_coinbase_api_proto = out.File
	file_services_coinbase_coinbase_api_coinbase_api_proto_rawDesc = nil
	file_services_coinbase_coinbase_api_coinbase_api_proto_goTypes = nil
	file_services_coinbase_coinbase_api_coinbase_api_proto_depIdxs = nil
}
