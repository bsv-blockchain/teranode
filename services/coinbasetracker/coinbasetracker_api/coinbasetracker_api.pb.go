// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: services/coinbasetracker/coinbasetracker_api/coinbasetracker_api.proto

package coinbasetracker_api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// swagger:model HealthResponse
type HealthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok        bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Details   string                 `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_rawDescGZIP(), []int{0}
}

func (x *HealthResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *HealthResponse) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *HealthResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// swagger:model GetUtxoRequest
type GetUtxoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetUtxoRequest) Reset() {
	*x = GetUtxoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUtxoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUtxoRequest) ProtoMessage() {}

func (x *GetUtxoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUtxoRequest.ProtoReflect.Descriptor instead.
func (*GetUtxoRequest) Descriptor() ([]byte, []int) {
	return file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_rawDescGZIP(), []int{1}
}

func (x *GetUtxoRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type Utxo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxId     []byte `protobuf:"bytes,1,opt,name=txId,proto3" json:"txId,omitempty"`
	Vout     uint32 `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
	Script   []byte `protobuf:"bytes,3,opt,name=script,proto3" json:"script,omitempty"`
	Satoshis uint64 `protobuf:"varint,4,opt,name=satoshis,proto3" json:"satoshis,omitempty"`
}

func (x *Utxo) Reset() {
	*x = Utxo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Utxo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Utxo) ProtoMessage() {}

func (x *Utxo) ProtoReflect() protoreflect.Message {
	mi := &file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Utxo.ProtoReflect.Descriptor instead.
func (*Utxo) Descriptor() ([]byte, []int) {
	return file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_rawDescGZIP(), []int{2}
}

func (x *Utxo) GetTxId() []byte {
	if x != nil {
		return x.TxId
	}
	return nil
}

func (x *Utxo) GetVout() uint32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

func (x *Utxo) GetScript() []byte {
	if x != nil {
		return x.Script
	}
	return nil
}

func (x *Utxo) GetSatoshis() uint64 {
	if x != nil {
		return x.Satoshis
	}
	return 0
}

// swagger:model MarkUtxoSpentRequest
type MarkUtxoSpentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxId        []byte `protobuf:"bytes,1,opt,name=txId,proto3" json:"txId,omitempty"`
	Vout        uint32 `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
	SpentByTxId []byte `protobuf:"bytes,3,opt,name=spentByTxId,proto3" json:"spentByTxId,omitempty"`
}

func (x *MarkUtxoSpentRequest) Reset() {
	*x = MarkUtxoSpentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkUtxoSpentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkUtxoSpentRequest) ProtoMessage() {}

func (x *MarkUtxoSpentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkUtxoSpentRequest.ProtoReflect.Descriptor instead.
func (*MarkUtxoSpentRequest) Descriptor() ([]byte, []int) {
	return file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_rawDescGZIP(), []int{3}
}

func (x *MarkUtxoSpentRequest) GetTxId() []byte {
	if x != nil {
		return x.TxId
	}
	return nil
}

func (x *MarkUtxoSpentRequest) GetVout() uint32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

func (x *MarkUtxoSpentRequest) GetSpentByTxId() []byte {
	if x != nil {
		return x.SpentByTxId
	}
	return nil
}

var File_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto protoreflect.FileDescriptor

var file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_rawDesc = []byte{
	0x0a, 0x46, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x62,
	0x61, 0x73, 0x65, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x62,
	0x61, 0x73, 0x65, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2f, 0x63,
	0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61,
	0x73, 0x65, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x74, 0x0a, 0x0e, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x22, 0x2a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x74, 0x78, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x62, 0x0a,
	0x04, 0x55, 0x74, 0x78, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x6f, 0x75,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x76, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x61, 0x74, 0x6f, 0x73, 0x68, 0x69,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x61, 0x74, 0x6f, 0x73, 0x68, 0x69,
	0x73, 0x22, 0x60, 0x0a, 0x14, 0x4d, 0x61, 0x72, 0x6b, 0x55, 0x74, 0x78, 0x6f, 0x53, 0x70, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x76, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x76, 0x6f, 0x75,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x54, 0x78, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x54,
	0x78, 0x49, 0x64, 0x32, 0x80, 0x02, 0x0a, 0x12, 0x43, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x41, 0x50, 0x49, 0x12, 0x47, 0x0a, 0x06, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x23, 0x2e, 0x63,
	0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x55, 0x74, 0x78, 0x6f, 0x12, 0x23,
	0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x74, 0x78, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x74, 0x78, 0x6f, 0x22, 0x00,
	0x12, 0x54, 0x0a, 0x0d, 0x4d, 0x61, 0x72, 0x6b, 0x55, 0x74, 0x78, 0x6f, 0x53, 0x70, 0x65, 0x6e,
	0x74, 0x12, 0x29, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x55, 0x74, 0x78, 0x6f,
	0x53, 0x70, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x17, 0x5a, 0x15, 0x2e, 0x3b, 0x63, 0x6f, 0x69, 0x6e,
	0x62, 0x61, 0x73, 0x65, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_rawDescOnce sync.Once
	file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_rawDescData = file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_rawDesc
)

func file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_rawDescGZIP() []byte {
	file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_rawDescOnce.Do(func() {
		file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_rawDescData)
	})
	return file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_rawDescData
}

var file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_goTypes = []interface{}{
	(*HealthResponse)(nil),        // 0: coinbasetracker_api.HealthResponse
	(*GetUtxoRequest)(nil),        // 1: coinbasetracker_api.GetUtxoRequest
	(*Utxo)(nil),                  // 2: coinbasetracker_api.Utxo
	(*MarkUtxoSpentRequest)(nil),  // 3: coinbasetracker_api.MarkUtxoSpentRequest
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 5: google.protobuf.Empty
}
var file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_depIdxs = []int32{
	4, // 0: coinbasetracker_api.HealthResponse.timestamp:type_name -> google.protobuf.Timestamp
	5, // 1: coinbasetracker_api.CoinbasetrackerAPI.Health:input_type -> google.protobuf.Empty
	1, // 2: coinbasetracker_api.CoinbasetrackerAPI.GetUtxo:input_type -> coinbasetracker_api.GetUtxoRequest
	3, // 3: coinbasetracker_api.CoinbasetrackerAPI.MarkUtxoSpent:input_type -> coinbasetracker_api.MarkUtxoSpentRequest
	0, // 4: coinbasetracker_api.CoinbasetrackerAPI.Health:output_type -> coinbasetracker_api.HealthResponse
	2, // 5: coinbasetracker_api.CoinbasetrackerAPI.GetUtxo:output_type -> coinbasetracker_api.Utxo
	5, // 6: coinbasetracker_api.CoinbasetrackerAPI.MarkUtxoSpent:output_type -> google.protobuf.Empty
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_init() }
func file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_init() {
	if File_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUtxoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Utxo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkUtxoSpentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_goTypes,
		DependencyIndexes: file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_depIdxs,
		MessageInfos:      file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_msgTypes,
	}.Build()
	File_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto = out.File
	file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_rawDesc = nil
	file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_goTypes = nil
	file_services_coinbasetracker_coinbasetracker_api_coinbasetracker_api_proto_depIdxs = nil
}
