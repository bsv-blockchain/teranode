syntax = "proto3";

option go_package = ".;blockassembly_api";

package blockassembly_api;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

service BlockAssemblyAPI {
  // Health returns the health of the API.
  rpc Health (google.protobuf.Empty) returns (HealthResponse) {}
  rpc NewChaintipAndHeight(NewChaintipAndHeightRequest) returns (google.protobuf.Empty) {}
  rpc AddTx (AddTxRequest) returns (AddTxResponse) {}
  // rpc GetMiningCandidate (google.protobuf.Empty) returns (GetMiningCandidateResponse) {}
  // rpc SubmitMiningSolution (SubmitMiningSolutionRequest) returns (SubmitMiningSolutionResponse) {}
}

// swagger:model HealthResponse
message HealthResponse {
  bool ok = 1;
  string details = 2;
  google.protobuf.Timestamp timestamp = 3;
}

// swagger:model NewChaintipAndHeightRequest
message NewChaintipAndHeightRequest {
  bytes chaintip = 1;
  uint32 height = 2;
}

// swagger:model AddTxRequest
message AddTxRequest {
  bytes txid = 1;
}

// swagger:model AddTxResponse
message AddTxResponse {
  bool ok = 1;
}

// message GetMiningCandidateResponse {
//   string id = 1;
//   bytes previous_hash = 2;
//   uint64 coinbase_value = 3;
//   uint32 version = 4;
//   uint32 nBits = 5;
//   uint32 time = 6;
//   uint32 height = 7;
//   uint64 num_tx = 8;
//   repeated string merkle_proof = 10;
//   repeated bytes merkle_subtrees = 11;
// }