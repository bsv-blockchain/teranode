version: '3.8'

# Define a common base configuration for ubsv nodes
x-ubsv-base:
  &ubsv-base
  image: ubsv:latest
  depends_on:
    - postgres-shared
  networks:
    - ubsv-network
  volumes:
    - ./data:/app/data
  expose:
    - 8081-8093

x-aerospike-base: &aerospike-base
  image: aerospike:ce-6.4.0.7_2
  mem_limit: 1024m
  networks:
    - ubsv-network
  command: --config-file /etc/aerospike.conf    
  volumes:
    - ./deploy/dev/aerospike.conf:/etc/aerospike.conf

networks:
  ubsv-network:
    name: my-ubsv-network

services:
  ubsv-builder:
    image: ubsv:latest
    build:
      context: .
      dockerfile: local.Dockerfile
      args:
        BASE_IMG: 434394763103.dkr.ecr.eu-north-1.amazonaws.com/ubsv:base-build-2db1b0e
        RUN_IMG: 434394763103.dkr.ecr.eu-north-1.amazonaws.com/ubsv:base-run-2db1b0e
    networks:
    - ubsv-network
    entrypoint: ["pwd"]

  postgres-shared:
    container_name: postgres
    image: postgres:latest
    networks:
      - ubsv-network
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: really_strong_password_change_me
      POSTGRES_DB: postgres
    ports:
      - 15432:5432
    expose:
      - 5432
    volumes:
      - ./deploy/dev/postgres-update-config.sh:/docker-entrypoint-initdb.d/postgres-update-config.sh
      - ./scripts/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  aerospike-1:
    container_name: aerospike-1
    <<: *aerospike-base
    ports:
      - 3100:3000

  aerospike-2:
    container_name: aerospike-2
    <<: *aerospike-base
    ports:
      - 3200:3000

  aerospike-3:
    container_name: aerospike-3
    <<: *aerospike-base
    ports:
      - 3300:3000

  kafka-1:
    container_name: kafka-1
    image: vectorized/redpanda:latest
    networks:
      - ubsv-network
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --node-id 0
      - --kafka-addr PLAINTEXT://0.0.0.0:9092
      - --advertise-kafka-addr PLAINTEXT://kafka-1:9092
      - --pandaproxy-addr 0.0.0.0:9093
      - --advertise-pandaproxy-addr localhost:9093
    ports:
      - 18181:8081
      - 19092:9092
      - 19093:9093

  kafka-console-1:
    container_name: kafka-console-1
    image: docker.redpanda.com/redpandadata/console:latest
    networks:
      - ubsv-network
    restart: on-failure
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["kafka-1:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://kafka-1:8081"]
    ports:
      - "18080:8080"
    depends_on:
      - kafka-1

  kafka-2:
    container_name: kafka-2
    image: vectorized/redpanda:latest
    networks:
      - ubsv-network
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --node-id 0
      - --kafka-addr PLAINTEXT://0.0.0.0:9092
      - --advertise-kafka-addr PLAINTEXT://kafka-2:9092
      - --pandaproxy-addr 0.0.0.0:9093
      - --advertise-pandaproxy-addr localhost:9093
    ports:
      - 28181:8081
      - 29092:9092
      - 29093:9093

  kafka-console-2:
    container_name: kafka-console-2
    image: docker.redpanda.com/redpandadata/console:latest
    networks:
      - ubsv-network
    restart: on-failure
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["kafka-2:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://kafka-2:8081"]
    ports:
      - "28080:8080"
    depends_on:
      - kafka-2

  kafka-3:
    container_name: kafka-3
    image: vectorized/redpanda:latest
    networks:
      - ubsv-network
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --node-id 0
      - --kafka-addr PLAINTEXT://0.0.0.0:9092
      - --advertise-kafka-addr PLAINTEXT://kafka-3:9092
      - --pandaproxy-addr 0.0.0.0:9093
      - --advertise-pandaproxy-addr localhost:9093
    ports:
      - 38181:8081
      - 39092:9092
      - 39093:9093

  kafka-console-3:
    container_name: kafka-console-3
    networks:
      - ubsv-network
    image: docker.redpanda.com/redpandadata/console:latest
    restart: on-failure
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["kafka-3:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://kafka-3:8081"]
    ports:
      - "38080:8080"
    depends_on:
      - kafka-3

  ubsv-1:
    container_name: ubsv-1
    <<: *ubsv-base
    depends_on:
      - aerospike-1
      - postgres-shared
      - kafka-console-1
    entrypoint: ["/app/wait.sh", "aerospike-1", "3000", "2", "--", "/app/wait.sh", "kafka-1", "9092", "0", "--", "/app/ubsv.run", "-miner=1", "-coinbase=1"]
    environment:
      SETTINGS_CONTEXT: "docker.ci.ubsv1"
      logLevel: "DEBUG"
      # utxostore: postgres://miner1:miner1@postgres:5432/ubsv1
      # txmeta_store: postgres://miner1:miner1@postgres:5432/ubsv1
      utxostore: aerospike://aerospike-1:3000/test?WarmUp=32&ConnectionQueueSize=32&LimitConnectionsToQueueSize=true&MinConnectionsPerNode=8&expiration=300
      txmeta_store: aerospike://aerospike-1:3000/test?WarmUp=32&ConnectionQueueSize=32&LimitConnectionsToQueueSize=true&MinConnectionsPerNode=8&expiration=300
      blockchain_store: postgres://miner1:miner1@postgres:5432/ubsv1
      coinbase_store: postgres://coinbase1:coinbase1@postgres:5432/coinbase1
      # startTxStore: "true"
      # txstore: file:///data/ubsv1/txstore
      subtreestore: file:///data/ubsv1/subtreestore
      mine_initial_blocks: true
      mine_initial_blocks_count: 1000
      miner_wallet_private_keys: "L56TgyTpDdvL3W24SMoALYotibToSCySQeo4pThLKxw6EFR6f93Q | KyAwSjuXZNgj78w3W7mR1fVMbPFu2heaCJJkWK5Yy58NZ4xafV6k | L32b9pdNPxXhqEA5VvzMb8wQ1NPpRXFmViFgEewjkVg8ZgH23b6w"
      startBootstrap: false
      startP2P: true
      feature_libP2P: true
      feature_bootstrap: false
      blockchain_grpcAddress: "ubsv-1:8087"
      blockvalidation_httpAddress: "http://localhost:8088"
      propagation_grpcAddresses: localhost:8084 | ubsv-2:8084 | ubsv-3:8084
    volumes:
      - ./settings_local.conf:/app/settings_local.conf
    #   - ./data/ubsv1/txstore:/data/ubsv1/txstore
    #   - ./data/ubsv1/subtreestore:/data/ubsv1/subtreestore
    ports:
      - "18081-18089:8081-8089"
      - "18090-18093:8090-8093"
      - "19091:9091"

  ubsv-2:
    container_name: ubsv-2
    <<: *ubsv-base
    depends_on:
      - aerospike-2
      - postgres-shared
      - kafka-console-2
    entrypoint: ["/app/wait.sh", "aerospike-2", "3000", "2", "--", "/app/wait.sh", "kafka-2", "9092", "0", "--", "/app/ubsv.run", "-miner=1", "-coinbase=1"]
    environment:
      SETTINGS_CONTEXT: "docker.ci.ubsv2"
      logLevel: "DEBUG"
      # utxostore: postgres://miner2:miner2@postgres:5432/ubsv2
      # txmeta_store: postgres://miner2:miner2@postgres:5432/ubsv2
      utxostore: aerospike://aerospike-2:3000/test?WarmUp=32&ConnectionQueueSize=32&LimitConnectionsToQueueSize=true&MinConnectionsPerNode=8&expiration=300
      txmeta_store: aerospike://aerospike-2:3000/test?WarmUp=32&ConnectionQueueSize=32&LimitConnectionsToQueueSize=true&MinConnectionsPerNode=8&expiration=300
      blockchain_store: postgres://miner2:miner2@postgres:5432/ubsv2
      coinbase_store: postgres://coinbase2:coinbase2@postgres:5432/coinbase2
      # startTxStore: "true"
      # txstore: file:///data/ubsv2/txstore
      subtreestore: file:///data/ubsv2/subtreestore
      miner_wallet_private_keys: "L56TgyTpDdvL3W24SMoALYotibToSCySQeo4pThLKxw6EFR6f93Q | KyAwSjuXZNgj78w3W7mR1fVMbPFu2heaCJJkWK5Yy58NZ4xafV6k | L32b9pdNPxXhqEA5VvzMb8wQ1NPpRXFmViFgEewjkVg8ZgH23b6w"
      startBootstrap: false
      feature_bootstrap: false
      startP2P: true
      feature_libP2P: true
      mine_initial_blocks: false
      blockchain_grpcAddress: "ubsv-2:8087"
      blockvalidation_httpAddress: "http://localhost:8088"
      propagation_grpcAddresses: ubsv-1:8084 | ubsv-2:8084 | ubsv-3:8084
    volumes:
      - ./settings_local.conf:/app/settings_local.conf
      - ./data/ubsv2/txstore:/data/ubsv2/txstore
      - ./data/ubsv2/subtreestore:/data/ubsv2/subtreestore
    ports:
      - "28081-28089:8081-8089"
      - "28090-28093:8090-8093"
      - "29091:9091"

  ubsv-3:
    container_name: ubsv-3
    <<: *ubsv-base
    depends_on:
      - aerospike-3
      - postgres-shared
      - kafka-console-3
    entrypoint: ["/app/wait.sh", "aerospike-3", "3000", "2", "--", "/app/wait.sh", "kafka-3", "9092", "0", "--", "/app/ubsv.run", "-miner=1", "-coinbase=1"]
    environment:
      SETTINGS_CONTEXT: "docker.ci.ubsv3"
      logLevel: "DEBUG"
      # utxostore: postgres://miner3:miner3@postgres:5432/ubsv3
      # txmeta_store: postgres://miner3:miner3@postgres:5432/ubsv3
      utxostore: aerospike://aerospike-3:3000/test?WarmUp=32&ConnectionQueueSize=32&LimitConnectionsToQueueSize=true&MinConnectionsPerNode=8&expiration=300
      txmeta_store: aerospike://aerospike-3:3000/test?WarmUp=32&ConnectionQueueSize=32&LimitConnectionsToQueueSize=true&MinConnectionsPerNode=8&expiration=300
      blockchain_store: postgres://miner3:miner3@postgres:5432/ubsv3
      coinbase_store: postgres://coinbase3:coinbase3@postgres:5432/coinbase3
      # startTxStore: "true"
      # txstore: file:///data/ubsv3/txstore
      subtreestore: file:///data/ubsv3/subtreestore
      miner_wallet_private_keys: "L56TgyTpDdvL3W24SMoALYotibToSCySQeo4pThLKxw6EFR6f93Q | KyAwSjuXZNgj78w3W7mR1fVMbPFu2heaCJJkWK5Yy58NZ4xafV6k | L32b9pdNPxXhqEA5VvzMb8wQ1NPpRXFmViFgEewjkVg8ZgH23b6w"
      startBootstrap: false
      feature_bootstrap: false
      startP2P: true
      feature_libP2P: true
      mine_initial_blocks: false
      blockchain_grpcAddress: "ubsv-3:8087"
      blockvalidation_httpAddress: "http://localhost:8088"
      propagation_grpcAddresses: ubsv-1:8084 | ubsv-2:8084 | ubsv-3:8084
    volumes:
      - ./settings_local.conf:/app/settings_local.conf
      - ./data/ubsv3/txstore:/data/ubsv3/txstore
      - ./data/ubsv3/subtreestore:/data/ubsv3/subtreestore
    ports:
      - "38081-38089:8081-8089"
      - "38090-38093:8090-8093"
      - "39091:9091"

  tx-blaster-1:
    container_name: tx-blaster-1
    <<: *ubsv-base
    depends_on:
      - ubsv-1
      - ubsv-2
      - ubsv-3
    environment:
      SETTINGS_CONTEXT: "docker.ci"
      tx_blaster_profilerAddr: ":9092"
      asset_httpAddress: "http://ubsv-1:8090"
      propagation_grpcAddresses: ubsv-1:8084 | ubsv-2:8084 | ubsv-3:8084
      coinbase_grpcAddress: ubsv-1:8093
      coinbase_store: postgres://coinbase1:coinbase1@postgres:5432/coinbase1
      blockchain_store: postgres://miner1:miner1@postgres:5432/ubsv1
      utxostore: postgres://miner1:miner1@postgres:5432/ubsv1
      coinbase_assetGrpcAddress: ubsv-1:8091
      BLASTER_ARGS: "-workers=2"
      # p2p_bootstrapAddresses: "/ip4/172.24.0.2/tcp/9901/p2p/12D3KooWS43tBXaGewmskvL1B82KccLP5JafTvreiJNbHCbZhDnh"
      p2p_bootstrapAddresses: "/dns4/p2p-bootstrap-1/tcp/9901/p2p/12D3KooWJ6kQHAR65xkA34NABsNVAJyVxPWh8JUSo1vtZsTyw4GD"
      propagation_quicAddresses: https://ubsv-1:8384 | https://ubsv-2:8384 | https://ubsv-3:8384
    # pass arguments to the command
    command: ["/app/blaster.run", "-workers=10", "-print=0", "-profile=:9092", "-log=0", "-limit=1000", "--quic=false"]
    networks:
      - ubsv-network
    volumes:
      - ./settings_local.conf:/app/settings_local.conf
      - ./data/txblaster1:/app/data
      # - ./data/txblaster.log:/app/data/txblaster.log

  tx-blaster-2:
    container_name: tx-blaster-2
    <<: *ubsv-base
    depends_on:
      - ubsv-1
      - ubsv-2
      - ubsv-3
    environment:
      SETTINGS_CONTEXT: "docker.ci"
      tx_blaster_profilerAddr: ":9092"
      asset_httpAddress: "http://ubsv-2:8090"
      propagation_grpcAddresses: ubsv-1:8084 | ubsv-2:8084 | ubsv-3:8084
      coinbase_grpcAddress: ubsv-2:8093
      coinbase_store: postgres://coinbase2:coinbase2@postgres:5432/coinbase2
      blockchain_store: postgres://miner2:miner2@postgres:5432/ubsv2
      utxostore: postgres://miner2:miner2@postgres:5432/ubsv2
      coinbase_assetGrpcAddress: ubsv-2:8091
      BLASTER_ARGS: "-workers=2"
      # p2p_bootstrapAddresses: "/ip4/172.24.0.2/tcp/9901/p2p/12D3KooWS43tBXaGewmskvL1B82KccLP5JafTvreiJNbHCbZhDnh"
      p2p_bootstrapAddresses: "/dns4/p2p-bootstrap-1/tcp/9901/p2p/12D3KooWS43tBXaGewmskvL1B82KccLP5JafTvreiJNbHCbZhDnh"
      propagation_quicAddresses: https://ubsv-1:8384 | https://ubsv-2:8384 | https://ubsv-3:8384
    # pass arguments to the command
    command: ["/app/blaster.run", "-workers=10", "-print=0", "-profile=:9092", "-log=0", "-limit=1000", "--quic=false"]
    networks:
      - ubsv-network
    volumes:
      - ./settings_local.conf:/app/settings_local.conf
      - ./data/txblaster2:/app/data
      # - ./data/txblaster.log:/app/data/txblaster.log

  tx-blaster-3:
    container_name: tx-blaster-31
    <<: *ubsv-base
    depends_on:
      - ubsv-1
      - ubsv-2
      - ubsv-3
    environment:
      SETTINGS_CONTEXT: "docker.ci"
      tx_blaster_profilerAddr: ":9092"
      asset_httpAddress: "http://ubsv-3:8090"
      propagation_grpcAddresses: ubsv-1:8084 | ubsv-2:8084 | ubsv-3:8084
      coinbase_grpcAddress: ubsv-3:8093
      coinbase_store: postgres://coinbase3:coinbase3@postgres:5432/coinbase3
      blockchain_store: postgres://miner3:miner3@postgres:5432/ubsv3
      utxostore: postgres://miner3:miner3@postgres:5432/ubsv3
      coinbase_assetGrpcAddress: ubsv-3:8091
      BLASTER_ARGS: "-workers=2"
      # p2p_bootstrapAddresses: "/ip4/172.24.0.2/tcp/9901/p2p/12D3KooWS43tBXaGewmskvL1B82KccLP5JafTvreiJNbHCbZhDnh"
      p2p_bootstrapAddresses: "/dns4/p2p-bootstrap-1/tcp/9901/p2p/12D3KooWS43tBXaGewmskvL1B82KccLP5JafTvreiJNbHCbZhDnh"
      propagation_quicAddresses: https://ubsv-1:8384 | https://ubsv-2:8384 | https://ubsv-3:8384
    # pass arguments to the command
    command: ["/app/blaster.run", "-workers=10", "-print=0", "-profile=:9092", "-log=0", "-limit=1000", "--quic=false"]
    networks:
      - ubsv-network
    volumes:
      - ./settings_local.conf:/app/settings_local.conf
      - ./data/txblaster2:/app/data
      # - ./data/txblaster.log:/app/data/txblaster.log

  aerospike-exporter-1:
    image: aerospike/aerospike-prometheus-exporter:latest
    container_name: aerospike-exporter-1
    environment:
      AS_HOST: "aerospike-1"
      AS_PORT: "3000"
      METRIC_LABELS: "type='development',source='aerospike'"
    ports:
      - "19145:9145"
    networks:
      - ubsv-network

  aerospike-exporter-2:
    image: aerospike/aerospike-prometheus-exporter:latest
    container_name: aerospike-exporter-2
    environment:
      AS_HOST: "aerospike-2"
      AS_PORT: "3000"
      METRIC_LABELS: "type='development',source='aerospike'"
    ports:
      - "29145:9145"
    networks:
      - ubsv-network

  aerospike-exporter-3:
    image: aerospike/aerospike-prometheus-exporter:latest
    container_name: aerospike-exporter-3
    environment:
      AS_HOST: "aerospike-3"
      AS_PORT: "3000"
      METRIC_LABELS: "type='development',source='aerospike'"
    ports:
      - "39145:9145"
    networks:
      - ubsv-network

  prometheus-1:
    container_name: prometheus-1
    image: prom/prometheus:v2.44.0
    mem_limit: 64m
    ports:
      - "19090:9090"
    networks:
      - ubsv-network
    volumes:
      - ./deploy/dev/prometheus/prometheus-1.yml:/etc/prometheus/prometheus.yml

  prometheus-2:
    container_name: prometheus-2
    image: prom/prometheus:v2.44.0
    mem_limit: 64m
    ports:
      - "29090:9090"
    networks:
      - ubsv-network
    volumes:
      - ./deploy/dev/prometheus/prometheus-2.yml:/etc/prometheus/prometheus.yml

  prometheus-3:
    container_name: prometheus-3
    image: prom/prometheus:v2.44.0
    mem_limit: 64m
    ports:
      - "39090:9090"
    networks:
      - ubsv-network
    volumes:
      - ./deploy/dev/prometheus/prometheus-3.yml:/etc/prometheus/prometheus.yml

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - ubsv-network
    volumes:
      - ./deploy/dev/grafana/datasources/main.yaml:/etc/grafana/provisioning/datasources/main.yaml
      - ./deploy/dev/grafana/dashboards/main.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./deploy/dev/grafana/dashboards:/var/lib/grafana/dashboards
      - ./deploy/dev/grafana/grafana.db:/var/lib/grafana
    depends_on:
      - prometheus-1
      - prometheus-2
      - prometheus-3