# Define a common base configuration for ubsv nodes
x-ubsv-base:
  &ubsv-base
  image: ubsv:latest
  depends_on:
    - postgres
  networks:
    - ubsv-network
  volumes:
    - ./data:/app/data
  expose:
    - 8081-8093
x-common-env: &common-env
  ALLOW_PLAINTEXT_LISTENER: "yes"
  KAFKA_CFG_NODE_ID: "0"
  KAFKA_CFG_PROCESS_ROLES: "controller,broker"
  KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
  KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
  KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
networks:
  ubsv-network:
    name: my-ubsv-network
services:
  ubsv-builder:
    image: ubsv:latest
    build:
      context: .
      dockerfile: local.Dockerfile
      args:
        BASE_IMG: 434394763103.dkr.ecr.eu-north-1.amazonaws.com/ubsv:base-build-2db1b0e
        RUN_IMG: 434394763103.dkr.ecr.eu-north-1.amazonaws.com/ubsv:base-run-2db1b0e
    networks:
      - ubsv-network
    entrypoint: ["pwd"]
  # p2p-bootstrap-1:
  #   build:
  #     context: ./modules/p2pBootstrap
  #     dockerfile: local.Dockerfile
  #   environment:
  #     P2P_BOOTSTRAP_PORT: 9901
  #     SETTINGS_CONTEXT: "docker.ci.ubsv1"
  #   networks:
  #     - ubsv-network
  #   ports:
  #     - "19901:9901"
  postgres:
    container_name: postgres
    image: postgres:latest
    networks:
      - ubsv-network
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: really_strong_password_change_me
      POSTGRES_DB: postgres
    ports:
      - 5432:5432
    expose:
      - 5432
    volumes:
      - ./scripts/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
  kafka-shared:
    container_name: kafka-shared
    image: bitnami/kafka:latest
    mem_limit: 384m
    networks:
      - ubsv-network
    ports:
      - "19092:9092"
      - "19093:9093"
    environment:
      # <<: *common-env
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_NODE_ID: "0"
      KAFKA_CFG_PROCESS_ROLES: "controller,broker"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "0@kafka-shared:9093"
  ubsv-1:
    <<: *ubsv-base
    depends_on:
      - kafka-shared
      # - aerospike-1
      - postgres
    # entrypoint: ["/app/wait.sh", "aerospike-1", "3000", "2", "--", "/app/wait.sh", "kafka-shared", "9092", "0", "--", "/app/ubsv.run", "-miner=1", "-coinbase=1"]
    entrypoint: ["/app/wait.sh", "kafka-shared", "9092", "0", "--", "/app/ubsv.run", "-miner=1", "-coinbase=1", "blockpersister=1"]
    environment:
      SETTINGS_CONTEXT: "docker.ci.ubsv1.debug"
      logLevel: "DEBUG"
      utxostore: postgres://miner1:miner1@postgres:5432/ubsv1
      blockchain_store: postgres://miner1:miner1@postgres:5432/ubsv1
      coinbase_store: postgres://coinbase1:coinbase1@postgres:5432/coinbase1
      miner_wallet_private_keys: "L56TgyTpDdvL3W24SMoALYotibToSCySQeo4pThLKxw6EFR6f93Q | KyAwSjuXZNgj78w3W7mR1fVMbPFu2heaCJJkWK5Yy58NZ4xafV6k | L32b9pdNPxXhqEA5VvzMb8wQ1NPpRXFmViFgEewjkVg8ZgH23b6w"
      # p2p_bootstrapAddresses: /dns4/p2p-bootstrap-1/tcp/9901/p2p/12D3KooWS43tBXaGewmskvL1B82KccLP5JafTvreiJNbHCbZhDnh
      # p2p_shared_key: 847a544c7403b353bd493791de2bd70878860932a40957196cc7462c8cf435c7
    volumes:
      - ./settings_local.conf:/app/settings_local.conf
      - ./data/ubsv1/txstore:/app/data/txstore
      - ./data/ubsv1/subtreestore:/app/data/subtreestore
      - ./data/ubsv1/blockstore:/app/data/blockstore
    ports:
      - "18081-18089:8081-8089"
      - "18090-18093:8090-8093"
      - "19091:9091"
      - "19905:9905"
  # ubsv-2:
  #   <<: *ubsv-base
  #   depends_on:
  #     - kafka-shared
  #     # - aerospike-2
  #     - postgres
  #   # entrypoint: ["/app/wait.sh", "aerospike-2", "3000", "2", "--", "/app/wait.sh", "kafka-shared", "9092", "0", "--", "/app/ubsv.run", "-miner=1", "-coinbase=1"]
  #   entrypoint: ["/app/wait.sh", "kafka-shared", "9092", "0", "--", "/app/ubsv.run", "-miner=1", "-coinbase=1", "blockpersister=1"]
  #   environment:
  #     SETTINGS_CONTEXT: "docker.ci.ubsv2.debug"
  #     logLevel: "DEBUG"
  #     utxostore: postgres://miner2:miner2@postgres:5432/ubsv2
  #     blockchain_store: postgres://miner2:miner2@postgres:5432/ubsv2
  #     coinbase_store: postgres://coinbase2:coinbase2@postgres:5432/coinbase2
  #     miner_wallet_private_keys: "L56TgyTpDdvL3W24SMoALYotibToSCySQeo4pThLKxw6EFR6f93Q | KyAwSjuXZNgj78w3W7mR1fVMbPFu2heaCJJkWK5Yy58NZ4xafV6k | L32b9pdNPxXhqEA5VvzMb8wQ1NPpRXFmViFgEewjkVg8ZgH23b6w"
  #     # p2p_bootstrapAddresses: /dns4/p2p-bootstrap-1/tcp/9901/p2p/12D3KooWS43tBXaGewmskvL1B82KccLP5JafTvreiJNbHCbZhDnh
  #     # p2p_shared_key: 847a544c7403b353bd493791de2bd70878860932a40957196cc7462c8cf435c7
  #   volumes:
  #     - ./settings_local.conf:/app/settings_local.conf
  #     - ./data/ubsv2/txstore:/app/data/ubsv2/txstore
  #     - ./data/ubsv2/subtreestore:/app/data/ubsv2/subtreestore
  #     - ./data/ubsv2/blockpersister:/app/data/ubsv2/blockpersister
  #   ports:
  #     - "28081-28089:8081-8089"
  #     - "28090-28093:8090-8093"
  #     - "29091:9091"
  #     - "29905:9905"
  # ubsv-3:
  #   <<: *ubsv-base
  #   depends_on:
  #     - kafka-shared
  #     # - aerospike-2
  #     - postgres
  #   # entrypoint: ["/app/wait.sh", "aerospike-2", "3000", "2", "--", "/app/wait.sh", "kafka-shared", "9092", "0", "--", "/app/ubsv.run", "-miner=1", "-coinbase=1"]
  #   entrypoint: ["/app/wait.sh", "kafka-shared", "9092", "0", "--", "/app/ubsv.run", "-miner=1", "-coinbase=1", "blockpersister=1"]
  #   environment:
  #     SETTINGS_CONTEXT: "docker.ci.ubsv3.debug"
  #     logLevel: "DEBUG"
  #     utxostore: postgres://miner3:miner3@postgres:5432/ubsv3
  #     blockchain_store: postgres://miner3:miner3@postgres:5432/ubsv3
  #     coinbase_store: postgres://coinbase2:coinbase2@postgres:5432/coinbase3
  #     miner_wallet_private_keys: "L56TgyTpDdvL3W24SMoALYotibToSCySQeo4pThLKxw6EFR6f93Q | KyAwSjuXZNgj78w3W7mR1fVMbPFu2heaCJJkWK5Yy58NZ4xafV6k | L32b9pdNPxXhqEA5VvzMb8wQ1NPpRXFmViFgEewjkVg8ZgH23b6w"
  #     # p2p_bootstrapAddresses: /dns4/p2p-bootstrap-1/tcp/9901/p2p/12D3KooWS43tBXaGewmskvL1B82KccLP5JafTvreiJNbHCbZhDnh
  #     # p2p_shared_key: 847a544c7403b353bd493791de2bd70878860932a40957196cc7462c8cf435c7
  #   volumes:
  #     - ./settings_local.conf:/app/settings_local.conf
  #     - ./data/ubsv3/txstore:/app/data/txstore
  #     - ./data/ubsv3/subtreestore:/app/data/subtreestore
  #     - ./data/ubsv3/blockpersister:/app/data/blockpersister
  #   ports:
  #     - "38081-38089:8081-8089"
  #     - "38090-38093:8090-8093"
  tx-blaster-1:
    <<: *ubsv-base
    depends_on:
      - ubsv-1
      # - ubsv-2
      # - ubsv-3
    environment:
      SETTINGS_CONTEXT: "docker.ci"
      tx_blaster_profilerAddr: ":9092"
      asset_httpAddress: "http://ubsv-1:8090"
      propagation_grpcAddresses: ubsv-1:8084 | ubsv-2:8084 | localhost:8084
      coinbase_grpcAddress: ubsv-1:8093
      coinbase_store: postgres://coinbase1:coinbase1@postgres:5432/coinbase1
      blockchain_store: postgres://miner1:miner1@postgres:5432/ubsv1
      utxostore: postgres://miner1:miner1@postgres:5432/ubsv1
      coinbase_assetGrpcAddress: ubsv-1:8091
      BLASTER_ARGS: "-workers=2"
      # p2p_bootstrapAddresses: /dns4/p2p-bootstrap-1/tcp/9901/p2p/12D3KooWS43tBXaGewmskvL1B82KccLP5JafTvreiJNbHCbZhDnh
      p2p_bootstrapAddresses: "/dns4/p2p-bootstrap-1/tcp/9901/p2p/12D3KooWJ6kQHAR65xkA34NABsNVAJyVxPWh8JUSo1vtZsTyw4GD"
      # p2p_shared_key: 847a544c7403b353bd493791de2bd70878860932a40957196cc7462c8cf435c7
      # propagation_quicAddresses: https://ubsv-1:8384 | https://ubsv-2:8384 | https://ubsv-3:8384
    # pass arguments to the command
    command: ["/app/blaster.run", "-workers=1", "-print=0", "-profile=:9092", "-log=0", "-limit=10", "--quic=false"]
    networks:
      - ubsv-network
    volumes:
      - ./settings_local.conf:/app/settings_local.conf
      - ./data/txblaster1:/app/data
      # - ./data/txblaster.log:/app/data/txblaster.log
  prometheus:
    image: prom/prometheus:v2.44.0
    ports:
      - "9090:9090"
    networks:
      - ubsv-network
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
# Add more ubsv nodes as needed
