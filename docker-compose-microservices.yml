# Define a common base configuration for ubsv nodes
x-ubsv-base:
  &ubsv-base
  image: ubsv:latest
  depends_on:
    - postgres
    - kafka-shared
    - aerospike-1
  networks:
    - ubsv-network
  volumes:
    - ./data:/app/data
    - ./settings_local.conf:/app/settings_local.conf
    - ./data/ubsv1/txstore:/app/data/txstore
    - ./data/ubsv1/subtreestore:/app/data/subtreestore
    - ./data/ubsv1/blockstore:/app/data/blockstore
  expose:
    - 8081-8093
  environment:
    SETTINGS_CONTEXT: ${SETTINGS_CONTEXT_1:-docker.ci.ubsv1}
    logLevel: "DEBUG"
    utxostore: aerospike://aerospike-1:3100/test?WarmUp=32&ConnectionQueueSize=32&LimitConnectionsToQueueSize=true&MinConnectionsPerNode=8&expiration=300
    blockchain_store: postgres://miner1:miner1@postgres:5432/ubsv1
    coinbase_store: postgres://coinbase1:coinbase1@postgres:5432/coinbase1

networks:
  ubsv-network:
    name: my-ubsv-network

services:
  ubsv-builder:
    image: ubsv:latest
    build:
      context: .
      dockerfile: local.Dockerfile
      args:
        BASE_IMG: 434394763103.dkr.ecr.eu-north-1.amazonaws.com/ubsv:base-build-2db1b0e
        RUN_IMG: 434394763103.dkr.ecr.eu-north-1.amazonaws.com/ubsv:base-run-2db1b0e
    networks:
      - ubsv-network
    entrypoint: ["pwd"]

  postgres:
    container_name: postgres
    image: postgres:latest
    networks:
      - ubsv-network
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: really_strong_password_change_me
      POSTGRES_DB: postgres
    ports:
      - 5432:5432
    expose:
      - 5432
    volumes:
      - ./scripts/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./data/postgres:/var/lib/postgresql/data
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  kafka-shared:
    container_name: kafka-shared
    image: vectorized/redpanda:latest
    mem_limit: 256m
    networks:
      - ubsv-network
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --node-id 0
      - --kafka-addr PLAINTEXT://0.0.0.0:9092
      - --advertise-kafka-addr PLAINTEXT://kafka-shared:9092
      - --pandaproxy-addr 0.0.0.0:9093
      - --advertise-pandaproxy-addr localhost:9093
    ports:
      - 18181:8081
      - 19092:9092
      - 19093:9093

  kafka-console-shared:
    container_name: kafka-console-shared
    image: docker.redpanda.com/redpandadata/console:latest
    networks:
      - ubsv-network
    restart: on-failure
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["kafka-shared:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://kafka-shared:8081"]
    ports:
      - "18080:8080"
    depends_on:
      - kafka-shared

  aerospike-1:
    container_name: aerospike-1
    image: aerospike:ce-6.4.0.7_2
    command: --config-file /etc/aerospike.conf
    networks:
      - ubsv-network
    ports:
      - 3100:3000
    restart: on-failure
    volumes:
      - ./deploy/dev/aerospike/aerospike-1.conf:/etc/aerospike.conf
      - ./data/aerospike-1/data:/opt/aerospike/data

  ubsv-miner:
    <<: *ubsv-base
    container_name: ubsv-miner
    entrypoint: ["/app/wait.sh", "postgres", "5432", "0", "--", "/app/wait.sh", "kafka-shared", "9092", "0", "--", "/app/ubsv.run", "-miner=1"]
    ports:
      - "18081-18089:8081-8089"
      - "18090-18097:8090-8097"
      - "19091:9091"
      - "19905:9905"
      - "19292:9292"

  ubsv-coinbase:
    <<: *ubsv-base
    container_name: ubsv-coinbase
    entrypoint: ["/app/wait.sh", "postgres", "5432", "0", "--", "/app/wait.sh", "kafka-shared", "9092", "0", "--", "/app/ubsv.run", "-coinbase=1"]
    ports:
      - "18081-18089:8081-8089"
      - "18090-18097:8090-8097"
      - "19091:9091"
      - "19905:9905"
      - "19292:9292"

  ubsv-blockpersister:
    <<: *ubsv-base
    container_name: ubsv-blockpersister
    entrypoint: ["/app/wait.sh", "postgres", "5432", "0", "--", "/app/wait.sh", "kafka-shared", "9092", "0", "--", "/app/ubsv.run", "-blockpersister=1"]
    ports:
      - "18081-18089:8081-8089"
      - "18090-18097:8090-8097"
      - "19091:9091"
      - "19905:9905"
      - "19292:9292"

  ubsv-rpc:
    <<: *ubsv-base
    container_name: ubsv-rpc
    entrypoint: ["/app/wait.sh", "postgres", "5432", "0", "--", "/app/wait.sh", "kafka-shared", "9092", "0", "--", "/app/ubsv.run", "-rpc=1"]
    ports:
      - "18081-18089:8081-8089"
      - "18090-18097:8090-8097"
      - "19091:9091"
      - "19905:9905"
      - "19292:9292"

  ubsv-asset:
    <<: *ubsv-base
    container_name: ubsv-asset
    entrypoint: ["/app/wait.sh", "postgres", "5432", "0", "--", "/app/wait.sh", "kafka-shared", "9092", "0", "--", "/app/ubsv.run", "-asset=1"]
    ports:
      - "18081-18089:8081-8089"
      - "18090-18097:8090-8097"
      - "19091:9091"
      - "19905:9905"
      - "19292:9292"

  ubsv-subtreevalidation:
    <<: *ubsv-base
    container_name: ubsv-subtreevalidation
    entrypoint: ["/app/wait.sh", "postgres", "5432", "0", "--", "/app/wait.sh", "kafka-shared", "9092", "0", "--", "/app/ubsv.run", "-subtreevalidation=1"]
    ports:
      - "18081-18089:8081-8089"
      - "18090-18097:8090-8097"
      - "19091:9091"
      - "19905:9905"
      - "19292:9292"

  ubsv-blockvalidation:
    <<: *ubsv-base
    container_name: ubsv-blockvalidation
    entrypoint: ["/app/wait.sh", "postgres", "5432", "0", "--", "/app/wait.sh", "kafka-shared", "9092", "0", "--", "/app/ubsv.run", "-blockvalidation=1"]
    ports:
      - "18081-18089:8081-8089"
      - "18090-18097:8090-8097"
      - "19091:9091"
      - "19905:9905"
      - "19292:9292"

  ubsv-blockassembly:
    <<: *ubsv-base
    container_name: ubsv-blockassembly
    entrypoint: ["/app/wait.sh", "postgres", "5432", "0", "--", "/app/wait.sh", "kafka-shared", "9092", "0", "--", "/app/ubsv.run", "-blockassembly=1"]
    ports:
      - "18081-18089:8081-8089"
      - "18090-18097:8090-8097"
      - "19091:9091"
      - "19905:9905"
      - "19292:9292"

  prometheus-1:
    container_name: prometheus-1
    image: prom/prometheus:v2.44.0
    mem_limit: 64m
    ports:
      - "19090:9090"
    networks:
      - ubsv-network
    volumes:
      - ./deploy/dev/prometheus/prometheus-1.yml:/etc/prometheus/prometheus.yml

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - ubsv-network
    volumes:
      - ./deploy/dev/grafana/datasources/main.yaml:/etc/grafana/provisioning/datasources/main.yaml
      - ./deploy/dev/grafana/dashboards/main.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./deploy/dev/grafana/dashboards:/var/lib/grafana/dashboards
      - ./deploy/dev/grafana/grafana.db:/var/lib/grafana
    depends_on:
      - prometheus-1
