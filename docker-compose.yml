x-teranode-base: &teranode-base
  image: 434394763103.dkr.ecr.eu-north-1.amazonaws.com/teranode:latest
  depends_on:
    - postgres
    - kafka-shared
  networks:
    - teranode-network
  volumes:
    - ./data/test/${TEST_ID:-default}:/app/data

x-aerospike-base: &aerospike-base
  image: aerospike:ce-7.2.0.3_1
  networks:
    - teranode-network
  command: --config-file /etc/aerospike.conf

networks:
  teranode-network:
    name: teranode-network-test-${TEST_ID:-default}

services:
  teranode-builder:
    image: 434394763103.dkr.ecr.eu-north-1.amazonaws.com/teranode:latest
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BASE_IMG: 434394763103.dkr.ecr.eu-north-1.amazonaws.com/teranode-base:build-latest
        RUN_IMG: 434394763103.dkr.ecr.eu-north-1.amazonaws.com/teranode-base:run-latest
    networks:
      - teranode-network
    entrypoint: [ "pwd" ]
    expose:
      - "8000"

  postgres:
    container_name: postgres-test-${TEST_ID:-default}
    image: postgres:latest
    networks:
      - teranode-network
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: really_strong_password_change_me
      POSTGRES_DB: postgres
    ports:
      - "15432:5432"
    expose:
      - "5432"
    volumes:
      - ./compose/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./data/test/${TEST_ID:-default}/postgres:/var/lib/postgresql/data
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  kafka-shared:
    container_name: kafka-shared-test-${TEST_ID:-default}
    image: redpandadata/redpanda:latest
    mem_limit: 256m
    networks:
      - teranode-network
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --node-id 0
      - --kafka-addr PLAINTEXT://0.0.0.0:9092
      - --advertise-kafka-addr PLAINTEXT://kafka-shared:9092
      - --pandaproxy-addr 0.0.0.0:9093
      - --advertise-pandaproxy-addr localhost:9093
    expose:
      - "8081"
      - "9092"
      - "9093"
    volumes:
      - ./data/test/${TEST_ID:-default}/kafka:/var/lib/kafka

  kafka-console-shared:
    container_name: kafka-console-shared-test-${TEST_ID:-default}
    image: docker.redpanda.com/redpandadata/console:latest
    networks:
      - teranode-network
    restart: on-failure
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["kafka-shared:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://kafka-shared:8081"]
    ports:
      - "18080:8080"
    depends_on:
      - kafka-shared

  aerospike-1:
    <<: *aerospike-base
    container_name: aerospike-1-test-${TEST_ID:-default}
    ports:
      - "13100"
    expose:
      - "13100"
    volumes:
      - ./compose/aerospike/aerospike-tc-1.conf:/etc/aerospike.conf
      - ./data/test/${TEST_ID:-default}/aerospike-1/data:/opt/aerospike/data

  aerospike-2:
    <<: *aerospike-base
    container_name: aerospike-2-test-${TEST_ID:-default}
    ports:
      - "13200"
    expose:
      - "13200"
    volumes:
      - ./compose/aerospike/aerospike-tc-2.conf:/etc/aerospike.conf
      - ./data/test/${TEST_ID:-default}/aerospike-2/data:/opt/aerospike/data

  aerospike-3:
    <<: *aerospike-base
    container_name: aerospike-3-test-${TEST_ID:-default}
    ports:
      - "13300"
    expose:
      - "13300"
    volumes:
      - ./compose/aerospike/aerospike-tc-3.conf:/etc/aerospike.conf
      - ./data/test/${TEST_ID:-default}/aerospike-3/data:/opt/aerospike/data

  teranode1:
    <<: *teranode-base
    container_name: teranode1-test-${TEST_ID:-default}
    image: teranode:latest
    depends_on:
      - aerospike-1
      - postgres
      - kafka-shared
    entrypoint: [ "/app/wait.sh", "aerospike-1", "13100", "2", "--", "/app/wait.sh", "postgres", "5432", "0", "--", "/app/wait.sh", "kafka-shared", "9092", "0", "--", "/app/teranode.run", "-coinbase=1", "-blockpersister=1", "-rpc=1", "-faucet=1", "-localTestStartFromState=RUNNING" ]
    environment:
      SETTINGS_CONTEXT: ${SETTINGS_CONTEXT_1:-docker.teranode1.test}
      logLevel: "DEBUG"
    ports:
      - "18000:8000"
      - "18081-18097:8081-8097"
      - "18099:8099"
      - "19091:9091"
      - "19905:9905"
      - "19292:9292"
    expose:
      - "8000"
      - "8081-8097"
      - "8099"
      - "9091"
      - "9905"
      - "9292"
    volumes:
      - ./settings_local.conf:/app/settings_local.conf:ro
      - ./test/wait.sh:/app/wait.sh:ro
      - ./data/test/${TEST_ID:-default}/teranode1/txstore:/app/data/txstore
      - ./data/test/${TEST_ID:-default}/teranode1/subtreestore:/app/data/subtreestore
      - ./data/test/${TEST_ID:-default}/teranode1/blockstore:/app/data/blockstore
      - ./data/test/${TEST_ID:-default}/teranode1/external:/app/data/teranode1/external

  teranode2:
    <<: *teranode-base
    container_name: teranode2-test-${TEST_ID:-default}
    image: teranode:latest
    depends_on:
      - aerospike-2
      - postgres
      - kafka-shared
    entrypoint: [ "/app/wait.sh", "aerospike-2", "13200", "2", "--", "/app/wait.sh", "postgres", "5432", "0", "--", "/app/wait.sh", "kafka-shared", "9092", "0", "--", "/app/teranode.run", "-coinbase=1", "-blockpersister=1", "-rpc=1", "-localTestStartFromState=RUNNING" ]
    environment:
      SETTINGS_CONTEXT: ${SETTINGS_CONTEXT_2:-docker.teranode2.test}
      logLevel: "DEBUG"
    ports:
      - "28000:8000"
      - "28081-28097:8081-8097"
      - "28099:8099"
      - "29091:9091"
      - "29905:9905"
      - "29292:9292"
    expose:
      - "8000"
      - "8081-8097"
      - "8099"
      - "9091"
      - "9905"
      - "9292"
    volumes:
      - ./settings_local.conf:/app/settings_local.conf:ro
      - ./test/wait.sh:/app/wait.sh:ro
      - ./data/test/${TEST_ID:-default}/teranode2/txstore:/app/data/txstore
      - ./data/test/${TEST_ID:-default}/teranode2/subtreestore:/app/data/subtreestore
      - ./data/test/${TEST_ID:-default}/teranode2/blockstore:/app/data/blockstore
      - ./data/test/${TEST_ID:-default}/teranode2/external:/app/data/teranode2/external

  teranode3:
    <<: *teranode-base
    container_name: teranode3-test-${TEST_ID:-default}
    image: teranode:latest
    depends_on:
      - aerospike-3
      - postgres
      - kafka-shared
    entrypoint: [ "/app/wait.sh", "aerospike-3", "13300", "2", "--", "/app/wait.sh", "postgres", "5432", "0", "--", "/app/wait.sh", "kafka-shared", "9092", "0", "--", "/app/teranode.run", "-coinbase=1", "-blockpersister=1", "-rpc=1", "-localTestStartFromState=RUNNING" ]
    environment:
      SETTINGS_CONTEXT: ${SETTINGS_CONTEXT_3:-docker.teranode3.test}
      logLevel: "DEBUG"
      JAEGER_SERVICE_NAME: teranode-3
      JAEGER_AGENT_HOST: jaeger
      JAEGER_AGENT_PORT: 6831
    ports:
      - "38000:8000"
      - "38081-38097:8081-8097"
      - "38099:8099"
      - "39091:9091"
      - "39905:9905"
      - "39292:9292"
    expose:
      - "8000"
      - "8081-8097"
      - "8099"
      - "9091"
      - "9905"
      - "9292"
    volumes:
      - ./settings_local.conf:/app/settings_local.conf:ro
      - ./test/wait.sh:/app/wait.sh:ro
      - ./data/test/${TEST_ID:-default}/teranode3/txstore:/app/data/txstore
      - ./data/test/${TEST_ID:-default}/teranode3/subtreestore:/app/data/subtreestore
      - ./data/test/${TEST_ID:-default}/teranode3/blockstore:/app/data/blockstore
      - ./data/test/${TEST_ID:-default}/teranode3/external:/app/data/teranode3/external
