@startuml Coinbase Overlay Node Service

actor TxBlaster
entity Node
entity Bootstrap
entity CON
database Store

CON -> Bootstrap: Discover
note right
  CON requests a list of Nodes to connect to
end note

CON -> Node: Connect
note right
  CON connects to the neighboring nodes
end note

CON -> Node: Synchronize
note right
  CON syncronizes its store with the latest blocks in the nodes
end note

CON -> Node: Subscribe
note right
  CON could listen to the network for new blocks rather than subscribing to a node
end note

loop For each new block
  Node -> CON: New Block Notification
  CON -> Node: Get Block
  CON -> CON: Parse Block
  CON -> Store: Store Block and coinbase UTXOs
note right
  <b>Database Schema</b>
  <code>
  Block
  --------------------------------
  ID              uint (ORM)
  CreatedAt       time (ORM)
  UpdatedAt       time (ORM)
  Height          uint64
  Address         string/base58 encoded
  Block hash      string/hex encoded
  Prev block hash string/hex encoded
  --------------------------------

  <b>Note</b>: Fork awareness is achieved by identifying the entries
  which poin to the previous block hash more than once.

  <code>
  Coinbase UTXO
  --------------------------------
  ID        uint (ORM)
  CreatedAt time (ORM)
  UpdatedAt time (ORM)
  Txid      string
  Vout      uint32
  Script    string
  Amount    uint64
  Address   string/base58 encoded
  Spent     bool
  --------------------------------

end note
end

group Blast
TxBlaster -> CON: GetUTXOs (pubkey, amount)
CON -> Store: Get UTXOs
Store -> CON: Return UTXOs
CON -> TxBlaster: Return UTXOs

TxBlaster -> TxBlaster: Create Transaction

TxBlaster -> CON: SubmitTransaction
CON -> Node: Submit Transaction
note right
  CON may want to poll or listen for tx confirmation
end note
CON -> Store: Mark UTXOs as spent
end




@enduml
