@startuml Coinbase Overlay Node Service

actor TxBlaster
entity Node
entity CON
database Store

CON -> Node: Subscribe
note right
  CON could listen to the network for new blocks rather than subscribing to a node
end note

loop For each new block
  Node -> CON: New Block Notification
  CON -> Node: Get Block
  CON -> CON: Parse Block
  CON -> Store: Store Block and coinbase UTXOs
note right
  <b>Database Schema</b>
<code>
Blocks
--------------------------------
Height          uint64
Address         string/base64 encoded
Block hash      string/base64 encoded
Prev block hash string/base64 encoded
--------------------------------
Note: Fork awareness is achieved by identifying the entries
which poin to the previous block hash more than once.

Coinbase UTXOS
--------------------------------
Txid    string
VoutÂ    uint32
Script  string
Address string/base64 encoded
Blockhash string/base64 encoded
Status (spent/spendable/locked) | enum?
--------------------------------
</code>
end note
end

group Blast
TxBlaster -> CON: GetUTXOs (pubkey, amount)
CON -> Store: Get UTXOs
Store -> CON: Return UTXOs
CON -> TxBlaster: Return UTXOs

TxBlaster -> TxBlaster: Create Transaction

TxBlaster -> CON: SubmitTransaction
CON -> Node: Submit Transaction
note right
  CON may want to poll or listen for tx confirmation
end note
CON -> Store: Mark UTXOs as spent
end




@enduml
