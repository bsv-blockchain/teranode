@startuml

participant "Node (Peer 1)" as Node1
queue "LibP2P Host" as LibP2P
queue "PubSub System" as PubSub
participant "Peer 2" as Peer2

Node1 -> Node1: Start()
activate Node1
Node1 -> Node1: s.sendBestBlockMessage(ctx)
activate Node1
Node1 -> PubSub: s.topics[bestBlockTopicName].Publish(ctx, msgBytes)
deactivate Node1

PubSub ->  Peer2: s.handleBestBlockTopic(ctx)
activate Peer2


Peer2 -> Peer2: s.P2PNode.SendToPeer(ctx, peer, msgBytes)
Peer2 -> LibP2P: s.host.NewStream(ctx, peer.ID, protocol.ID(s.bitcoinProtocolId))
deactivate Peer2

activate LibP2P

LibP2P -> Node1: s.streamHandler(stream)
deactivate LibP2P

activate Node1
Node1 -> Node1: Log the received message \n(no action)
deactivate Node1

left footer Last Modified On: %date("dd-MMM-yyyy")

@enduml
