@startuml
skinparam backgroundColor #F0F8FF
skinparam defaultFontColor #333333
skinparam arrowColor #666666

' Define borders for all elements
skinparam entity {
  BorderColor #666666
  BackgroundColor #DDDDDD
}

skinparam control {
  BorderColor #666666
  BackgroundColor #DDDDDD
}

skinparam participant {
  BorderColor #666666
  BackgroundColor #DDDDDD
}



participant "Coinbase Server" as Co
participant "BlockchainClient" as BC
participant "Blockchain Store" as St
participant "Coinbase Store" as Cs

Co -> BC: Subscribe(ctx, "coinbase")
note right: Subscription request

Co -> Co: Wait for notification
alt notification type is Block
    Co -> Co: processBlock(ctx, hash, baseURL)
    activate Co
    Co -> BC: GetBlock(ctx, blockHash)
    BC --> Co: block
    Co -> St: GetBlockExists(ctx, block.Header.HashPrevBlock)
    St --> Co: exists
    alt Parent Block Known
        Co -> Co: storeBlock(ctx, block)
        activate Co
        Co -> St: StoreBlock(ctx, block, "")
        St --> Co: blockId, height
        Co -> Co: processCoinbase(ctx, blockId, block.Hash(), block.CoinbaseTx)
        activate Co
        Co -> Cs: insertCoinbaseUTXOs(ctx, blockId, coinbaseTx)
        Cs --> Co
        Co -> Cs: Update matured UTXOs to spendable
        Cs --> Co
        Co -> Co: createSpendingUtxos(ctx, timestamp)
        activate Co
        loop for each matured UTXO
            Co -> Co: splitUtxo(ctx, utxo)
            activate Co
            Co -> Co: Create new transaction
            Co -> Co: Split UTXO into smaller outputs
            Co -> Co: Sign transaction
            Co -> Co: DistributeTransaction(ctx, tx)
            Co -> Cs: insertSpendableUTXOs(ctx, tx)
            Cs --> Co
            deactivate Co
        end
        deactivate Co
        deactivate Co
    else Parent Block Unknown
        Co -> Co: catchup(ctx, block, baseURL)
        note right: Triggers a "catch up" recovery cycle
    end
    deactivate Co
end

left footer Last Modified On: %date("dd-MMM-yyyy")

@enduml
