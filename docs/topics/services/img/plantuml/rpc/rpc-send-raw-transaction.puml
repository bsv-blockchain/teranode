@startuml
skinparam backgroundColor #F0F8FF
skinparam defaultFontColor #333333
skinparam arrowColor #666666

' Define borders for all elements
skinparam entity {
  BorderColor #666666
  BackgroundColor #DDDDDD
}

skinparam control {
  BorderColor #666666
  BackgroundColor #DDDDDD
}

skinparam participant {
  BorderColor #666666
  BackgroundColor #DDDDDD
}



participant Client
participant "RPC Server" as RPC
participant "Hex Decoder" as Decoder
participant "Transaction Parser" as Parser
participant "Distributor" as Distributor

Client -> RPC : SendRawTransactionCmd(HexTx)
activate RPC

RPC -> Decoder : Decode hex string
activate Decoder
Decoder -> RPC : return bytes or error
deactivate Decoder

alt If Hex Decoding Fails
    RPC -> Client : Return rpcDecodeHexError
else If Hex Decoding Succeeds
    RPC -> Parser : Parse transaction from bytes
    activate Parser
    Parser -> RPC : return transaction object or error
    deactivate Parser

    alt If Parsing Fails
        RPC -> Client : Return ErrRPCDeserialization
    else If Parsing Succeeds
        RPC -> Distributor : Initialize Distributor
        activate Distributor
        Distributor -> RPC : return distributor instance or error
        deactivate Distributor

        alt If Distributor Initialization Fails
            RPC -> Client : Return initialization error
        else If Initialization Succeeds
            RPC -> Distributor : SendTransaction(context, tx)
            activate Distributor
            Distributor -> RPC : return result or broadcasting error
            deactivate Distributor

            alt If Broadcasting Fails
                RPC -> Client : Return ErrRPCInvalidParameter
            else If Broadcasting Succeeds
                RPC -> Client : Return transaction result
                note right
                Response fields:
                - Returns transaction ID of broadcast transaction
                end note
            end
        end
    end
end

deactivate RPC

left footer Last Modified On: %date("dd-MMM-yyyy")

@enduml
