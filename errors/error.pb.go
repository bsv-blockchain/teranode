// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: errors/error.proto

package errors

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ERR int32

const (
	// General errors 0-9
	ERR_UNKNOWN            ERR = 0
	ERR_INVALID_ARGUMENT   ERR = 1
	ERR_THRESHOLD_EXCEEDED ERR = 2
	ERR_NOT_FOUND          ERR = 3
	ERR_PROCESSING         ERR = 4
	ERR_CONFIGURATION      ERR = 5
	ERR_CONTEXT            ERR = 6
	ERR_CONTEXT_CANCELED   ERR = 7
	ERR_EXTERNAL           ERR = 8
	ERR_ERROR              ERR = 9
	// Block errors 10-19
	ERR_BLOCK_NOT_FOUND               ERR = 10
	ERR_BLOCK_INVALID                 ERR = 11
	ERR_BLOCK_EXISTS                  ERR = 12
	ERR_BLOCK_INVALID_FORMAT          ERR = 13
	ERR_BLOCK_PARENT_NOT_MINED        ERR = 14
	ERR_BLOCK_COINBASE_MISSING_HEIGHT ERR = 15
	ERR_BLOCK_ERROR                   ERR = 19
	// Subtree errors 20-29
	ERR_SUBTREE_NOT_FOUND         ERR = 20
	ERR_SUBTREE_INVALID           ERR = 21
	ERR_SUBTREE_SERIALIZE_ERROR   ERR = 22
	ERR_SUBTREE_DESERIALIZE_ERROR ERR = 23
	ERR_SUBTREE_INVALID_FORMAT    ERR = 24
	ERR_SUBTREE_EXISTS            ERR = 25
	ERR_SUBTREE_ERROR             ERR = 29
	// Transaction errors 30-39
	ERR_TX_NOT_FOUND            ERR = 30
	ERR_TX_INVALID              ERR = 31
	ERR_TX_INVALID_DOUBLE_SPEND ERR = 32
	ERR_TX_EXISTS               ERR = 33
	ERR_TX_MISSING_PARENT       ERR = 34
	ERR_TX_LOCK_TIME            ERR = 35
	ERR_TX_ERROR                ERR = 39
	// Service errors 40-49
	ERR_SERVICE_UNAVAILABLE ERR = 40
	ERR_SERVICE_NOT_STARTED ERR = 41
	ERR_SERVICE_ERROR       ERR = 49
	// Storage errors 50-59
	ERR_STORAGE_UNAVAILABLE ERR = 50
	ERR_STORAGE_NOT_STARTED ERR = 51
	ERR_STORAGE_ERROR       ERR = 59
	// UTXO errors 60-69
	ERR_UTXO_SPENT     ERR = 60
	ERR_UTXO_NON_FINAL ERR = 61
	ERR_UTXO_FROZEN    ERR = 62
	ERR_UTXO_NOT_FOUND ERR = 63
	ERR_UTXO_ERROR     ERR = 69
	// Kafka errors 70-79
	ERR_KAFKA_DECODE_ERROR ERR = 70
	ERR_KAFKA_ERROR        ERR = 79
	// Blob errors 80-89
	ERR_BLOB_EXISTS    ERR = 80
	ERR_BLOB_NOT_FOUND ERR = 81
	ERR_BLOB_ERROR     ERR = 89
	// State errors 90-99
	ERR_STATE_INITIALIZATION ERR = 90
	ERR_STATE_ERROR          ERR = 99
)

// Enum value maps for ERR.
var (
	ERR_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "INVALID_ARGUMENT",
		2:  "THRESHOLD_EXCEEDED",
		3:  "NOT_FOUND",
		4:  "PROCESSING",
		5:  "CONFIGURATION",
		6:  "CONTEXT",
		7:  "CONTEXT_CANCELED",
		8:  "EXTERNAL",
		9:  "ERROR",
		10: "BLOCK_NOT_FOUND",
		11: "BLOCK_INVALID",
		12: "BLOCK_EXISTS",
		13: "BLOCK_INVALID_FORMAT",
		14: "BLOCK_PARENT_NOT_MINED",
		15: "BLOCK_COINBASE_MISSING_HEIGHT",
		19: "BLOCK_ERROR",
		20: "SUBTREE_NOT_FOUND",
		21: "SUBTREE_INVALID",
		22: "SUBTREE_SERIALIZE_ERROR",
		23: "SUBTREE_DESERIALIZE_ERROR",
		24: "SUBTREE_INVALID_FORMAT",
		25: "SUBTREE_EXISTS",
		29: "SUBTREE_ERROR",
		30: "TX_NOT_FOUND",
		31: "TX_INVALID",
		32: "TX_INVALID_DOUBLE_SPEND",
		33: "TX_EXISTS",
		34: "TX_MISSING_PARENT",
		35: "TX_LOCK_TIME",
		39: "TX_ERROR",
		40: "SERVICE_UNAVAILABLE",
		41: "SERVICE_NOT_STARTED",
		49: "SERVICE_ERROR",
		50: "STORAGE_UNAVAILABLE",
		51: "STORAGE_NOT_STARTED",
		59: "STORAGE_ERROR",
		60: "UTXO_SPENT",
		61: "UTXO_NON_FINAL",
		62: "UTXO_FROZEN",
		63: "UTXO_NOT_FOUND",
		69: "UTXO_ERROR",
		70: "KAFKA_DECODE_ERROR",
		79: "KAFKA_ERROR",
		80: "BLOB_EXISTS",
		81: "BLOB_NOT_FOUND",
		89: "BLOB_ERROR",
		90: "STATE_INITIALIZATION",
		99: "STATE_ERROR",
	}
	ERR_value = map[string]int32{
		"UNKNOWN":                       0,
		"INVALID_ARGUMENT":              1,
		"THRESHOLD_EXCEEDED":            2,
		"NOT_FOUND":                     3,
		"PROCESSING":                    4,
		"CONFIGURATION":                 5,
		"CONTEXT":                       6,
		"CONTEXT_CANCELED":              7,
		"EXTERNAL":                      8,
		"ERROR":                         9,
		"BLOCK_NOT_FOUND":               10,
		"BLOCK_INVALID":                 11,
		"BLOCK_EXISTS":                  12,
		"BLOCK_INVALID_FORMAT":          13,
		"BLOCK_PARENT_NOT_MINED":        14,
		"BLOCK_COINBASE_MISSING_HEIGHT": 15,
		"BLOCK_ERROR":                   19,
		"SUBTREE_NOT_FOUND":             20,
		"SUBTREE_INVALID":               21,
		"SUBTREE_SERIALIZE_ERROR":       22,
		"SUBTREE_DESERIALIZE_ERROR":     23,
		"SUBTREE_INVALID_FORMAT":        24,
		"SUBTREE_EXISTS":                25,
		"SUBTREE_ERROR":                 29,
		"TX_NOT_FOUND":                  30,
		"TX_INVALID":                    31,
		"TX_INVALID_DOUBLE_SPEND":       32,
		"TX_EXISTS":                     33,
		"TX_MISSING_PARENT":             34,
		"TX_LOCK_TIME":                  35,
		"TX_ERROR":                      39,
		"SERVICE_UNAVAILABLE":           40,
		"SERVICE_NOT_STARTED":           41,
		"SERVICE_ERROR":                 49,
		"STORAGE_UNAVAILABLE":           50,
		"STORAGE_NOT_STARTED":           51,
		"STORAGE_ERROR":                 59,
		"UTXO_SPENT":                    60,
		"UTXO_NON_FINAL":                61,
		"UTXO_FROZEN":                   62,
		"UTXO_NOT_FOUND":                63,
		"UTXO_ERROR":                    69,
		"KAFKA_DECODE_ERROR":            70,
		"KAFKA_ERROR":                   79,
		"BLOB_EXISTS":                   80,
		"BLOB_NOT_FOUND":                81,
		"BLOB_ERROR":                    89,
		"STATE_INITIALIZATION":          90,
		"STATE_ERROR":                   99,
	}
)

func (x ERR) Enum() *ERR {
	p := new(ERR)
	*p = x
	return p
}

func (x ERR) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ERR) Descriptor() protoreflect.EnumDescriptor {
	return file_errors_error_proto_enumTypes[0].Descriptor()
}

func (ERR) Type() protoreflect.EnumType {
	return &file_errors_error_proto_enumTypes[0]
}

func (x ERR) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ERR.Descriptor instead.
func (ERR) EnumDescriptor() ([]byte, []int) {
	return file_errors_error_proto_rawDescGZIP(), []int{0}
}

type TError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         ERR    `protobuf:"varint,1,opt,name=code,proto3,enum=errors.ERR" json:"code,omitempty"`
	Message      string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	WrappedError string `protobuf:"bytes,3,opt,name=wrappedError,proto3" json:"wrappedError,omitempty"`
}

func (x *TError) Reset() {
	*x = TError{}
	mi := &file_errors_error_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TError) ProtoMessage() {}

func (x *TError) ProtoReflect() protoreflect.Message {
	mi := &file_errors_error_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TError.ProtoReflect.Descriptor instead.
func (*TError) Descriptor() ([]byte, []int) {
	return file_errors_error_proto_rawDescGZIP(), []int{0}
}

func (x *TError) GetCode() ERR {
	if x != nil {
		return x.Code
	}
	return ERR_UNKNOWN
}

func (x *TError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TError) GetWrappedError() string {
	if x != nil {
		return x.WrappedError
	}
	return ""
}

var File_errors_error_proto protoreflect.FileDescriptor

var file_errors_error_proto_rawDesc = []byte{
	0x0a, 0x12, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x67, 0x0a, 0x06,
	0x54, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x45, 0x52,
	0x52, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x64, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x64,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x2a, 0xee, 0x07, 0x0a, 0x03, 0x45, 0x52, 0x52, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x4e,
	0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x41, 0x52, 0x47, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x01,
	0x12, 0x16, 0x0a, 0x12, 0x54, 0x48, 0x52, 0x45, 0x53, 0x48, 0x4f, 0x4c, 0x44, 0x5f, 0x45, 0x58,
	0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f,
	0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x52, 0x4f, 0x43, 0x45,
	0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x4e, 0x46, 0x49,
	0x47, 0x55, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f,
	0x4e, 0x54, 0x45, 0x58, 0x54, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x4e, 0x54, 0x45,
	0x58, 0x54, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x07, 0x12, 0x0c, 0x0a,
	0x08, 0x45, 0x58, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10, 0x08, 0x12, 0x09, 0x0a, 0x05, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x09, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f,
	0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x0a, 0x12, 0x11, 0x0a, 0x0d, 0x42,
	0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x0b, 0x12, 0x10,
	0x0a, 0x0c, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x10, 0x0c,
	0x12, 0x18, 0x0a, 0x14, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x10, 0x0d, 0x12, 0x1a, 0x0a, 0x16, 0x42, 0x4c,
	0x4f, 0x43, 0x4b, 0x5f, 0x50, 0x41, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x4d,
	0x49, 0x4e, 0x45, 0x44, 0x10, 0x0e, 0x12, 0x21, 0x0a, 0x1d, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f,
	0x43, 0x4f, 0x49, 0x4e, 0x42, 0x41, 0x53, 0x45, 0x5f, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4e, 0x47,
	0x5f, 0x48, 0x45, 0x49, 0x47, 0x48, 0x54, 0x10, 0x0f, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x4c, 0x4f,
	0x43, 0x4b, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x13, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x55,
	0x42, 0x54, 0x52, 0x45, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10,
	0x14, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x55, 0x42, 0x54, 0x52, 0x45, 0x45, 0x5f, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x10, 0x15, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x55, 0x42, 0x54, 0x52, 0x45,
	0x45, 0x5f, 0x53, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x16, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x55, 0x42, 0x54, 0x52, 0x45, 0x45, 0x5f, 0x44,
	0x45, 0x53, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x17, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x55, 0x42, 0x54, 0x52, 0x45, 0x45, 0x5f, 0x49, 0x4e,
	0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x10, 0x18, 0x12, 0x12,
	0x0a, 0x0e, 0x53, 0x55, 0x42, 0x54, 0x52, 0x45, 0x45, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53,
	0x10, 0x19, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x55, 0x42, 0x54, 0x52, 0x45, 0x45, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x1d, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x58, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x1e, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x58, 0x5f, 0x49, 0x4e,
	0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x1f, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x58, 0x5f, 0x49, 0x4e,
	0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x44, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x5f, 0x53, 0x50, 0x45,
	0x4e, 0x44, 0x10, 0x20, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x58, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54,
	0x53, 0x10, 0x21, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x58, 0x5f, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4e,
	0x47, 0x5f, 0x50, 0x41, 0x52, 0x45, 0x4e, 0x54, 0x10, 0x22, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x58,
	0x5f, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x23, 0x12, 0x0c, 0x0a, 0x08,
	0x54, 0x58, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x27, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x45,
	0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x28, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x29, 0x12, 0x11, 0x0a, 0x0d,
	0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x31, 0x12,
	0x17, 0x0a, 0x13, 0x53, 0x54, 0x4f, 0x52, 0x41, 0x47, 0x45, 0x5f, 0x55, 0x4e, 0x41, 0x56, 0x41,
	0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x32, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x54, 0x4f, 0x52,
	0x41, 0x47, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10,
	0x33, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54, 0x4f, 0x52, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x3b, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x54, 0x58, 0x4f, 0x5f, 0x53, 0x50, 0x45,
	0x4e, 0x54, 0x10, 0x3c, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x54, 0x58, 0x4f, 0x5f, 0x4e, 0x4f, 0x4e,
	0x5f, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x10, 0x3d, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x54, 0x58, 0x4f,
	0x5f, 0x46, 0x52, 0x4f, 0x5a, 0x45, 0x4e, 0x10, 0x3e, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x54, 0x58,
	0x4f, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x3f, 0x12, 0x0e, 0x0a,
	0x0a, 0x55, 0x54, 0x58, 0x4f, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x45, 0x12, 0x16, 0x0a,
	0x12, 0x4b, 0x41, 0x46, 0x4b, 0x41, 0x5f, 0x44, 0x45, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x46, 0x12, 0x0f, 0x0a, 0x0b, 0x4b, 0x41, 0x46, 0x4b, 0x41, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x4f, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x4c, 0x4f, 0x42, 0x5f, 0x45,
	0x58, 0x49, 0x53, 0x54, 0x53, 0x10, 0x50, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x4c, 0x4f, 0x42, 0x5f,
	0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x51, 0x12, 0x0e, 0x0a, 0x0a, 0x42,
	0x4c, 0x4f, 0x42, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x59, 0x12, 0x18, 0x0a, 0x14, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x5a, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x63, 0x42, 0x23, 0x5a, 0x21, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x2d, 0x73, 0x76, 0x2f,
	0x75, 0x62, 0x73, 0x76, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_errors_error_proto_rawDescOnce sync.Once
	file_errors_error_proto_rawDescData = file_errors_error_proto_rawDesc
)

func file_errors_error_proto_rawDescGZIP() []byte {
	file_errors_error_proto_rawDescOnce.Do(func() {
		file_errors_error_proto_rawDescData = protoimpl.X.CompressGZIP(file_errors_error_proto_rawDescData)
	})
	return file_errors_error_proto_rawDescData
}

var file_errors_error_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_errors_error_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_errors_error_proto_goTypes = []any{
	(ERR)(0),       // 0: errors.ERR
	(*TError)(nil), // 1: errors.TError
}
var file_errors_error_proto_depIdxs = []int32{
	0, // 0: errors.TError.code:type_name -> errors.ERR
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_errors_error_proto_init() }
func file_errors_error_proto_init() {
	if File_errors_error_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_errors_error_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_errors_error_proto_goTypes,
		DependencyIndexes: file_errors_error_proto_depIdxs,
		EnumInfos:         file_errors_error_proto_enumTypes,
		MessageInfos:      file_errors_error_proto_msgTypes,
	}.Build()
	File_errors_error_proto = out.File
	file_errors_error_proto_rawDesc = nil
	file_errors_error_proto_goTypes = nil
	file_errors_error_proto_depIdxs = nil
}
