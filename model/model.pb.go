// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: model/model.proto

package model

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// swagger:enum NotificationType
type NotificationType int32

const (
	NotificationType_PING             NotificationType = 0
	NotificationType_Subtree          NotificationType = 1
	NotificationType_Block            NotificationType = 2
	NotificationType_MiningOn         NotificationType = 3
	NotificationType_FSMState         NotificationType = 4
	NotificationType_BlockSubtreesSet NotificationType = 5
)

// Enum value maps for NotificationType.
var (
	NotificationType_name = map[int32]string{
		0: "PING",
		1: "Subtree",
		2: "Block",
		3: "MiningOn",
		4: "FSMState",
		5: "BlockSubtreesSet",
	}
	NotificationType_value = map[string]int32{
		"PING":             0,
		"Subtree":          1,
		"Block":            2,
		"MiningOn":         3,
		"FSMState":         4,
		"BlockSubtreesSet": 5,
	}
)

func (x NotificationType) Enum() *NotificationType {
	p := new(NotificationType)
	*p = x
	return p
}

func (x NotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_model_model_proto_enumTypes[0].Descriptor()
}

func (NotificationType) Type() protoreflect.EnumType {
	return &file_model_model_proto_enumTypes[0]
}

func (x NotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationType.Descriptor instead.
func (NotificationType) EnumDescriptor() ([]byte, []int) {
	return file_model_model_proto_rawDescGZIP(), []int{0}
}

// swagger:model MiningCandidate
type MiningCandidate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PreviousHash        []byte   `protobuf:"bytes,2,opt,name=previous_hash,json=previousHash,proto3" json:"previous_hash,omitempty"`
	CoinbaseValue       uint64   `protobuf:"varint,3,opt,name=coinbase_value,json=coinbaseValue,proto3" json:"coinbase_value,omitempty"`
	Version             uint32   `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	NBits               []byte   `protobuf:"bytes,5,opt,name=nBits,proto3" json:"nBits,omitempty"`
	Time                uint32   `protobuf:"varint,6,opt,name=time,proto3" json:"time,omitempty"`
	Height              uint32   `protobuf:"varint,7,opt,name=height,proto3" json:"height,omitempty"`
	MerkleProof         [][]byte `protobuf:"bytes,8,rep,name=merkle_proof,json=merkleProof,proto3" json:"merkle_proof,omitempty"`
	SubtreeCount        uint32   `protobuf:"varint,9,opt,name=subtreeCount,proto3" json:"subtreeCount,omitempty"`
	NumTxs              uint32   `protobuf:"varint,10,opt,name=num_txs,json=numTxs,proto3" json:"num_txs,omitempty"`
	SizeWithoutCoinbase uint64   `protobuf:"varint,11,opt,name=size_without_coinbase,json=sizeWithoutCoinbase,proto3" json:"size_without_coinbase,omitempty"`
}

func (x *MiningCandidate) Reset() {
	*x = MiningCandidate{}
	mi := &file_model_model_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiningCandidate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiningCandidate) ProtoMessage() {}

func (x *MiningCandidate) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiningCandidate.ProtoReflect.Descriptor instead.
func (*MiningCandidate) Descriptor() ([]byte, []int) {
	return file_model_model_proto_rawDescGZIP(), []int{0}
}

func (x *MiningCandidate) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *MiningCandidate) GetPreviousHash() []byte {
	if x != nil {
		return x.PreviousHash
	}
	return nil
}

func (x *MiningCandidate) GetCoinbaseValue() uint64 {
	if x != nil {
		return x.CoinbaseValue
	}
	return 0
}

func (x *MiningCandidate) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *MiningCandidate) GetNBits() []byte {
	if x != nil {
		return x.NBits
	}
	return nil
}

func (x *MiningCandidate) GetTime() uint32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *MiningCandidate) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *MiningCandidate) GetMerkleProof() [][]byte {
	if x != nil {
		return x.MerkleProof
	}
	return nil
}

func (x *MiningCandidate) GetSubtreeCount() uint32 {
	if x != nil {
		return x.SubtreeCount
	}
	return 0
}

func (x *MiningCandidate) GetNumTxs() uint32 {
	if x != nil {
		return x.NumTxs
	}
	return 0
}

func (x *MiningCandidate) GetSizeWithoutCoinbase() uint64 {
	if x != nil {
		return x.SizeWithoutCoinbase
	}
	return 0
}

// swagger:model MiningSolution
type MiningSolution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        []byte  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Coinbase  []byte  `protobuf:"bytes,2,opt,name=coinbase,proto3" json:"coinbase,omitempty"`
	Time      *uint32 `protobuf:"varint,3,opt,name=time,proto3,oneof" json:"time,omitempty"`
	Nonce     uint32  `protobuf:"varint,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Version   *uint32 `protobuf:"varint,5,opt,name=version,proto3,oneof" json:"version,omitempty"`
	BlockHash []byte  `protobuf:"bytes,6,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
}

func (x *MiningSolution) Reset() {
	*x = MiningSolution{}
	mi := &file_model_model_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiningSolution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiningSolution) ProtoMessage() {}

func (x *MiningSolution) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiningSolution.ProtoReflect.Descriptor instead.
func (*MiningSolution) Descriptor() ([]byte, []int) {
	return file_model_model_proto_rawDescGZIP(), []int{1}
}

func (x *MiningSolution) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *MiningSolution) GetCoinbase() []byte {
	if x != nil {
		return x.Coinbase
	}
	return nil
}

func (x *MiningSolution) GetTime() uint32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *MiningSolution) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *MiningSolution) GetVersion() uint32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *MiningSolution) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

// swagger:model NotificationMetadata
type NotificationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// define a map of string to string
	Metadata map[string]string `protobuf:"bytes,1,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *NotificationMetadata) Reset() {
	*x = NotificationMetadata{}
	mi := &file_model_model_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationMetadata) ProtoMessage() {}

func (x *NotificationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationMetadata.ProtoReflect.Descriptor instead.
func (*NotificationMetadata) Descriptor() ([]byte, []int) {
	return file_model_model_proto_rawDescGZIP(), []int{2}
}

func (x *NotificationMetadata) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// swagger:model BlockInfo
type BlockInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeenAt           *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=seen_at,json=seenAt,proto3" json:"seen_at,omitempty"`
	Height           uint32                 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Orphaned         bool                   `protobuf:"varint,3,opt,name=orphaned,proto3" json:"orphaned,omitempty"`
	BlockHeader      []byte                 `protobuf:"bytes,4,opt,name=block_header,json=blockHeader,proto3" json:"block_header,omitempty"`
	Miner            string                 `protobuf:"bytes,5,opt,name=miner,proto3" json:"miner,omitempty"`
	CoinbaseValue    uint64                 `protobuf:"varint,6,opt,name=coinbase_value,json=coinbaseValue,proto3" json:"coinbase_value,omitempty"`
	TransactionCount uint64                 `protobuf:"varint,7,opt,name=transaction_count,json=transactionCount,proto3" json:"transaction_count,omitempty"`
	Size             uint64                 `protobuf:"varint,8,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *BlockInfo) Reset() {
	*x = BlockInfo{}
	mi := &file_model_model_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockInfo) ProtoMessage() {}

func (x *BlockInfo) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockInfo.ProtoReflect.Descriptor instead.
func (*BlockInfo) Descriptor() ([]byte, []int) {
	return file_model_model_proto_rawDescGZIP(), []int{3}
}

func (x *BlockInfo) GetSeenAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SeenAt
	}
	return nil
}

func (x *BlockInfo) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *BlockInfo) GetOrphaned() bool {
	if x != nil {
		return x.Orphaned
	}
	return false
}

func (x *BlockInfo) GetBlockHeader() []byte {
	if x != nil {
		return x.BlockHeader
	}
	return nil
}

func (x *BlockInfo) GetMiner() string {
	if x != nil {
		return x.Miner
	}
	return ""
}

func (x *BlockInfo) GetCoinbaseValue() uint64 {
	if x != nil {
		return x.CoinbaseValue
	}
	return 0
}

func (x *BlockInfo) GetTransactionCount() uint64 {
	if x != nil {
		return x.TransactionCount
	}
	return 0
}

func (x *BlockInfo) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

// swagger:model SuitableBlock
type SuitableBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash      []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Height    uint32 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	NBits     []byte `protobuf:"bytes,3,opt,name=nBits,proto3" json:"nBits,omitempty"`
	Time      uint32 `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`
	ChainWork []byte `protobuf:"bytes,5,opt,name=chain_work,json=chainWork,proto3" json:"chain_work,omitempty"`
}

func (x *SuitableBlock) Reset() {
	*x = SuitableBlock{}
	mi := &file_model_model_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuitableBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuitableBlock) ProtoMessage() {}

func (x *SuitableBlock) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuitableBlock.ProtoReflect.Descriptor instead.
func (*SuitableBlock) Descriptor() ([]byte, []int) {
	return file_model_model_proto_rawDescGZIP(), []int{4}
}

func (x *SuitableBlock) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *SuitableBlock) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *SuitableBlock) GetNBits() []byte {
	if x != nil {
		return x.NBits
	}
	return nil
}

func (x *SuitableBlock) GetTime() uint32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *SuitableBlock) GetChainWork() []byte {
	if x != nil {
		return x.ChainWork
	}
	return nil
}

// swagger:model BlockStats
type BlockStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockCount         uint64  `protobuf:"varint,1,opt,name=block_count,json=blockCount,proto3" json:"block_count,omitempty"`
	TxCount            uint64  `protobuf:"varint,2,opt,name=tx_count,json=txCount,proto3" json:"tx_count,omitempty"`
	MaxHeight          uint64  `protobuf:"varint,3,opt,name=max_height,json=maxHeight,proto3" json:"max_height,omitempty"`
	AvgBlockSize       float64 `protobuf:"fixed64,4,opt,name=avg_block_size,json=avgBlockSize,proto3" json:"avg_block_size,omitempty"`
	AvgTxCountPerBlock float64 `protobuf:"fixed64,5,opt,name=avg_tx_count_per_block,json=avgTxCountPerBlock,proto3" json:"avg_tx_count_per_block,omitempty"`
	FirstBlockTime     uint32  `protobuf:"varint,6,opt,name=first_block_time,json=firstBlockTime,proto3" json:"first_block_time,omitempty"`
	LastBlockTime      uint32  `protobuf:"varint,7,opt,name=last_block_time,json=lastBlockTime,proto3" json:"last_block_time,omitempty"`
	ChainWork          []byte  `protobuf:"bytes,8,opt,name=chain_work,json=chainWork,proto3" json:"chain_work,omitempty"`
}

func (x *BlockStats) Reset() {
	*x = BlockStats{}
	mi := &file_model_model_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockStats) ProtoMessage() {}

func (x *BlockStats) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockStats.ProtoReflect.Descriptor instead.
func (*BlockStats) Descriptor() ([]byte, []int) {
	return file_model_model_proto_rawDescGZIP(), []int{5}
}

func (x *BlockStats) GetBlockCount() uint64 {
	if x != nil {
		return x.BlockCount
	}
	return 0
}

func (x *BlockStats) GetTxCount() uint64 {
	if x != nil {
		return x.TxCount
	}
	return 0
}

func (x *BlockStats) GetMaxHeight() uint64 {
	if x != nil {
		return x.MaxHeight
	}
	return 0
}

func (x *BlockStats) GetAvgBlockSize() float64 {
	if x != nil {
		return x.AvgBlockSize
	}
	return 0
}

func (x *BlockStats) GetAvgTxCountPerBlock() float64 {
	if x != nil {
		return x.AvgTxCountPerBlock
	}
	return 0
}

func (x *BlockStats) GetFirstBlockTime() uint32 {
	if x != nil {
		return x.FirstBlockTime
	}
	return 0
}

func (x *BlockStats) GetLastBlockTime() uint32 {
	if x != nil {
		return x.LastBlockTime
	}
	return 0
}

func (x *BlockStats) GetChainWork() []byte {
	if x != nil {
		return x.ChainWork
	}
	return nil
}

// swagger:model DataPoint
type DataPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp uint32 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TxCount   uint64 `protobuf:"varint,2,opt,name=tx_count,json=txCount,proto3" json:"tx_count,omitempty"`
}

func (x *DataPoint) Reset() {
	*x = DataPoint{}
	mi := &file_model_model_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPoint) ProtoMessage() {}

func (x *DataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPoint.ProtoReflect.Descriptor instead.
func (*DataPoint) Descriptor() ([]byte, []int) {
	return file_model_model_proto_rawDescGZIP(), []int{6}
}

func (x *DataPoint) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *DataPoint) GetTxCount() uint64 {
	if x != nil {
		return x.TxCount
	}
	return 0
}

// swagger:model BlockDataPoints
type BlockDataPoints struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataPoints []*DataPoint `protobuf:"bytes,1,rep,name=data_points,json=dataPoints,proto3" json:"data_points,omitempty"`
}

func (x *BlockDataPoints) Reset() {
	*x = BlockDataPoints{}
	mi := &file_model_model_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockDataPoints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockDataPoints) ProtoMessage() {}

func (x *BlockDataPoints) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockDataPoints.ProtoReflect.Descriptor instead.
func (*BlockDataPoints) Descriptor() ([]byte, []int) {
	return file_model_model_proto_rawDescGZIP(), []int{7}
}

func (x *BlockDataPoints) GetDataPoints() []*DataPoint {
	if x != nil {
		return x.DataPoints
	}
	return nil
}

var File_model_model_proto protoreflect.FileDescriptor

var file_model_model_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdd, 0x02, 0x0a, 0x0f,
	0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x6f,
	0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x42, 0x69, 0x74, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6e, 0x42, 0x69, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x72, 0x6b, 0x6c,
	0x65, 0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0b, 0x6d,
	0x65, 0x72, 0x6b, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x75,
	0x62, 0x74, 0x72, 0x65, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x73, 0x75, 0x62, 0x74, 0x72, 0x65, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x5f, 0x74, 0x78, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x6e, 0x75, 0x6d, 0x54, 0x78, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x69, 0x7a, 0x65, 0x5f,
	0x77, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x73, 0x69, 0x7a, 0x65, 0x57, 0x69, 0x74, 0x68,
	0x6f, 0x75, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x22, 0xbd, 0x01, 0x0a, 0x0e,
	0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x9a, 0x01, 0x0a, 0x14,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x95, 0x02, 0x0a, 0x09, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x33, 0x0a, 0x07, 0x73, 0x65, 0x65, 0x6e, 0x5f, 0x61,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x06, 0x73, 0x65, 0x65, 0x6e, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x70, 0x68, 0x61, 0x6e, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6f, 0x72, 0x70, 0x68, 0x61, 0x6e, 0x65, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x69, 0x6e,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0d, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x2b, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x22, 0x84, 0x01, 0x0a, 0x0d, 0x53, 0x75, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x6e, 0x42, 0x69, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6e,
	0x42, 0x69, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x22, 0xb2, 0x02, 0x0a, 0x0a, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x78, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x78, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x76, 0x67, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x61, 0x76, 0x67, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x32, 0x0a, 0x16, 0x61, 0x76, 0x67, 0x5f, 0x74,
	0x78, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x61, 0x76, 0x67, 0x54, 0x78, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x28, 0x0a, 0x10, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x66, 0x69, 0x72, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x6c, 0x61, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x22, 0x44, 0x0a, 0x09,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x78, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x78, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x44, 0x0a, 0x0f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x31, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x64, 0x61,
	0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2a, 0x66, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x50, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x74, 0x72, 0x65,
	0x65, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x10, 0x02, 0x12, 0x0c,
	0x0a, 0x08, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4f, 0x6e, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08,
	0x46, 0x53, 0x4d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x53, 0x75, 0x62, 0x74, 0x72, 0x65, 0x65, 0x73, 0x53, 0x65, 0x74, 0x10, 0x05,
	0x42, 0x22, 0x5a, 0x20, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62,
	0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x2d, 0x73, 0x76, 0x2f, 0x75, 0x62, 0x73, 0x76, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_model_model_proto_rawDescOnce sync.Once
	file_model_model_proto_rawDescData = file_model_model_proto_rawDesc
)

func file_model_model_proto_rawDescGZIP() []byte {
	file_model_model_proto_rawDescOnce.Do(func() {
		file_model_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_model_model_proto_rawDescData)
	})
	return file_model_model_proto_rawDescData
}

var file_model_model_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_model_model_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_model_model_proto_goTypes = []any{
	(NotificationType)(0),         // 0: model.NotificationType
	(*MiningCandidate)(nil),       // 1: model.MiningCandidate
	(*MiningSolution)(nil),        // 2: model.MiningSolution
	(*NotificationMetadata)(nil),  // 3: model.NotificationMetadata
	(*BlockInfo)(nil),             // 4: model.BlockInfo
	(*SuitableBlock)(nil),         // 5: model.SuitableBlock
	(*BlockStats)(nil),            // 6: model.BlockStats
	(*DataPoint)(nil),             // 7: model.DataPoint
	(*BlockDataPoints)(nil),       // 8: model.BlockDataPoints
	nil,                           // 9: model.NotificationMetadata.MetadataEntry
	(*timestamppb.Timestamp)(nil), // 10: google.protobuf.Timestamp
}
var file_model_model_proto_depIdxs = []int32{
	9,  // 0: model.NotificationMetadata.metadata:type_name -> model.NotificationMetadata.MetadataEntry
	10, // 1: model.BlockInfo.seen_at:type_name -> google.protobuf.Timestamp
	7,  // 2: model.BlockDataPoints.data_points:type_name -> model.DataPoint
	3,  // [3:3] is the sub-list for method output_type
	3,  // [3:3] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_model_model_proto_init() }
func file_model_model_proto_init() {
	if File_model_model_proto != nil {
		return
	}
	file_model_model_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_model_model_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_model_model_proto_goTypes,
		DependencyIndexes: file_model_model_proto_depIdxs,
		EnumInfos:         file_model_model_proto_enumTypes,
		MessageInfos:      file_model_model_proto_msgTypes,
	}.Build()
	File_model_model_proto = out.File
	file_model_model_proto_rawDesc = nil
	file_model_model_proto_goTypes = nil
	file_model_model_proto_depIdxs = nil
}
