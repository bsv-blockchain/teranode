# docker-compose file to test and play with the blob server
# This is to replicate how to test blob server for blockstore and subtreestore
#
# HOWTO
#
#    From the root project, build and run
#
#        docker-compose -f test/utils/cmd/blob/server/docker-compose.yml build
#        docker-compose -f test/utils/cmd/blob/server/docker-compose.yml up -d
#
#    To access the app directory to test
#        docker exec -it blobblockstore bash   # jump to the directory /app/data/teranode1/blockstore to see
#        docker exec -it blobsubtreestore bash # jump to the directory /app/data/teranode1/subtreestore to see
#
#    To run tests on the client side
#        go test -v ./test/utils/cmd/blob/server/...
#    Or run the client program
#        BSERVER_URL="127.0.0.1:8081" go run ./test/utils/cmd/blob/client/main.go
services:
  blobblockstore:
    container_name: blobblockstore
    build:
      context: ../../../../..
      dockerfile: test/utils/cmd/blob/server/Dockerfile
    image: blobserver
    environment:
      BSERVER_URL: ":8080"
      BSERVER_SUBDIR: "data/teranode1/blockstore"
    ports:
      - "8081:8080"
    volumes:
      - blobstore:/app/data/teranode1

  blobsubtreestore:
    container_name: blobsubtreestore
    build:
      context: ../../../../..
      dockerfile: test/utils/cmd/blob/server/Dockerfile
    image: blobserver
    environment:
      BSERVER_URL: ":8080"
      BSERVER_SUBDIR: "data/teranode1/subtreestore"
      BSERVER_HASHPREFIX: "2"
    ports:
      - "8082:8080"
    volumes:
      - blobstore:/app/data/teranode1

volumes:
  blobstore:
