x-teranode-base: &teranode-base
  image: teranode:latest
  depends_on:
    - postgres
    - kafka-shared
  networks:
    - e2etest

x-aerospike-base: &aerospike-base
  image: aerospike:ce-7.2.0.3_1
  networks:
    - e2etest
  command: --config-file /etc/aerospike.conf

x-blobblockstore-base: &blobblockstore-base
  build:
    context: ..
    dockerfile: test/utils/cmd/blob/server/Dockerfile
  image: blobserver
  networks:
    - e2etest

services:
  teranode-builder:
    image: teranode:latest
    build:
      context: ..
      dockerfile: Dockerfile
      args:
        BASE_IMG: 434394763103.dkr.ecr.eu-north-1.amazonaws.com/teranode:base-build-866edae
        RUN_IMG: 434394763103.dkr.ecr.eu-north-1.amazonaws.com/teranode:base-run-866edae
    networks:
      - e2etest
    entrypoint: [ "pwd" ]
    expose:
      - "8000"

  postgres:
    container_name: ${TEST_ID:-undefined}-postgres-test
    image: postgres:latest
    networks:
      - e2etest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: really_strong_password_change_me
      POSTGRES_DB: postgres
    ports:
      - "5432"
    expose:
      - "5432"
    volumes:
      - ../scripts/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - data-postgres:/var/lib/postgresql/data
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  kafka-shared:
    container_name: ${TEST_ID:-undefined}-kafka-shared-test
    image: redpandadata/redpanda:latest
    mem_limit: 256m
    networks:
      - e2etest
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --node-id 0
      - --kafka-addr PLAINTEXT://0.0.0.0:9092
      - --advertise-kafka-addr PLAINTEXT://kafka-shared:9092
      - --pandaproxy-addr 0.0.0.0:9093
      - --advertise-pandaproxy-addr localhost:9093
    expose:
      - "8081"
      - "9092"
      - "9093"
    volumes:
      - data-kafka:/var/lib/kafka

  kafka-console-shared:
    container_name: ${TEST_ID:-undefined}-kafka-console-shared-test
    image: docker.redpanda.com/redpandadata/console:latest
    networks:
      - e2etest
    restart: on-failure
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["kafka-shared:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://kafka-shared:8081"]
    ports:
      - "8080"
    depends_on:
      - kafka-shared

  aerospike-1:
    <<: *aerospike-base
    container_name: ${TEST_ID:-undefined}-aerospike-1-test
    ports:
      - "13100"
    expose:
      - "13100"
    volumes:
      - ../deploy/dev/aerospike/aerospike-tc-1.conf:/etc/aerospike.conf:ro
      - data-aerospike1:/opt/aerospike/data

  aerospike-2:
    <<: *aerospike-base
    container_name: ${TEST_ID:-undefined}-aerospike-2-test
    ports:
      - "13200"
    expose:
      - "13200"
    volumes:
      - ../deploy/dev/aerospike/aerospike-tc-2.conf:/etc/aerospike.conf:ro
      - data-aerospike2:/opt/aerospike/data

  aerospike-3:
    <<: *aerospike-base
    container_name: ${TEST_ID:-undefined}-aerospike-3-test
    ports:
      - "13300"
    expose:
      - "13300"
    volumes:
      - ../deploy/dev/aerospike/aerospike-tc-3.conf:/etc/aerospike.conf:ro
      - data-aerospike3:/opt/aerospike/data

  teranode1:
    <<: *teranode-base
    container_name: ${TEST_ID:-undefined}-teranode1-test
    depends_on:
      - aerospike-1
      - postgres
      - kafka-shared
    entrypoint: [ "/app/wait.sh", "aerospike-1", "13100", "2", "--", "/app/wait.sh", "postgres", "5432", "0", "--", "/app/wait.sh", "kafka-shared", "9092", "0", "--", "/app/teranode.run", "-coinbase=1", "-blockpersister=1", "-rpc=1", "-faucet=1" ]
    environment:
      SETTINGS_CONTEXT: ${SETTINGS_CONTEXT_1:-docker.teranode1.test}
      logLevel: "DEBUG"
    ports:
      - "8000"
      - "8081-8097"
      - "8099"
      - "9091"
      - "9905"
      - "9292"
    expose:
      - "8000"
      - "8081-8097"
      - "8099"
      - "9091"
      - "9905"
      - "9292"
    volumes:
      - ../settings_local.conf:/app/settings_local.conf:ro
      - ./wait.sh:/app/wait.sh:ro
      - data-teranode1:/app/data

  teranode2:
    <<: *teranode-base
    container_name: ${TEST_ID:-undefined}-teranode2-test
    depends_on:
      - aerospike-2
      - postgres
      - kafka-shared
    entrypoint: [ "/app/wait.sh", "aerospike-2", "13200", "2", "--", "/app/wait.sh", "postgres", "5432", "0", "--", "/app/wait.sh", "kafka-shared", "9092", "0", "--", "/app/teranode.run", "-coinbase=1", "-blockpersister=1", "-rpc=1" ]
    environment:
      SETTINGS_CONTEXT: ${SETTINGS_CONTEXT_2:-docker.teranode2.test}
      logLevel: "DEBUG"
    ports:
      - "8000"
      - "8081-8097"
      - "8099"
      - "9091"
      - "9905"
      - "9292"
    expose:
      - "8000"
      - "8081-8097"
      - "8099"
      - "9091"
      - "9905"
      - "9292"
    volumes:
      - ../settings_local.conf:/app/settings_local.conf:ro
      - ./wait.sh:/app/wait.sh:ro
      - data-teranode2:/app/data

  teranode3:
    <<: *teranode-base
    container_name: ${TEST_ID:-undefined}-teranode3-test
    depends_on:
      - aerospike-3
      - postgres
      - kafka-shared
    entrypoint: [ "/app/wait.sh", "aerospike-3", "13300", "2", "--", "/app/wait.sh", "postgres", "5432", "0", "--", "/app/wait.sh", "kafka-shared", "9092", "0", "--", "/app/teranode.run", "-coinbase=1", "-blockpersister=1", "-rpc=1" ]
    environment:
      SETTINGS_CONTEXT: ${SETTINGS_CONTEXT_3:-docker.teranode3.test}
      logLevel: "DEBUG"
      JAEGER_SERVICE_NAME: teranode-3
      JAEGER_AGENT_HOST: jaeger
      JAEGER_AGENT_PORT: 6831
    ports:
      - "8000"
      - "8081-8097"
      - "8099"
      - "9091"
      - "9905"
      - "9292"
    expose:
      - "8000"
      - "8081-8097"
      - "8099"
      - "9091"
      - "9905"
      - "9292"
    volumes:
      - ../settings_local.conf:/app/settings_local.conf:ro
      - ./wait.sh:/app/wait.sh:ro
      - data-teranode3:/app/data

  #####################################################################################
  ##                         Storegae helper for testing                             ##
  #####################################################################################
  blobblockstore1:
    <<: *blobblockstore-base
    container_name: ${TEST_ID:-undefined}-http-blobblockstore1
    environment:
      BSERVER_URL: ":8080"
      BSERVER_SUBDIR: "data/blockstore"
    ports:
      - "8080"
    expose:
      - "8080"
    depends_on:
      - teranode1
    volumes:
      - data-teranode1:/app/data

  blobblockstore2:
    <<: *blobblockstore-base
    container_name: ${TEST_ID:-undefined}-http-blobblockstore2
    environment:
      BSERVER_URL: ":8080"
      BSERVER_SUBDIR: "data/blockstore"
    ports:
      - "8080"
    expose:
      - "8080"
    depends_on:
      - teranode2
    volumes:
      - data-teranode2:/app/data

  blobblockstore3:
    <<: *blobblockstore-base
    container_name: ${TEST_ID:-undefined}-http-blobblockstore3
    environment:
      BSERVER_URL: ":8080"
      BSERVER_SUBDIR: "data/blockstore"
    ports:
      - "8080"
    expose:
      - "8080"
    depends_on:
      - teranode3
    volumes:
      - data-teranode3:/app/data

  blobsubtreestore1:
    <<: *blobblockstore-base
    container_name: ${TEST_ID:-undefined}-http-blobsubtreestore1
    environment:
      BSERVER_URL: ":8080"
      BSERVER_SUBDIR: "data/subtreestore"
      BSERVER_HASHPREFIX: "2"
    ports:
      - "8080"
    expose:
      - "8080"
    depends_on:
      - teranode1
    volumes:
      - data-teranode1:/app/data

  blobsubtreestore2:
    <<: *blobblockstore-base
    container_name: ${TEST_ID:-undefined}-http-blobsubtreestore2
    environment:
      BSERVER_URL: ":8080"
      BSERVER_SUBDIR: "data/subtreestore"
      BSERVER_HASHPREFIX: "2"
    ports:
      - "8080"
    expose:
      - "8080"
    depends_on:
      - teranode2
    volumes:
      - data-teranode2:/app/data

  blobsubtreestore3:
    <<: *blobblockstore-base
    container_name: ${TEST_ID:-undefined}-http-blobsubtreestore3
    environment:
      BSERVER_URL: ":8080"
      BSERVER_SUBDIR: "data/subtreestore"
      BSERVER_HASHPREFIX: "2"
    ports:
      - "8080"
    expose:
      - "8080"
    depends_on:
      - teranode3
    volumes:
      - data-teranode3:/app/data

  teststorage:
    container_name: ${TEST_ID:-undefined}-storage-test
    build:
      context: ..
      dockerfile: test/utils/cmd/tstore/Dockerfile
    image: tstore
    environment:
      LOCALSYSTEM_TSTOREURL: ":50051"
      LOCALSYSTEM_TSTOREROOTDIR: /data/test
    ports:
      - "50051"
    expose:
      - "50051"
    volumes:
      - data-postgres:/data/test/postgres
      - data-kafka:/data/test/kafka
      - data-aerospike1:/data/test/aerospike1
      - data-aerospike2:/data/test/aerospike2
      - data-aerospike3:/data/test/aerospike3
      - data-teranode1:/data/test/teranode1
      - data-teranode2:/data/test/teranode2
      - data-teranode3:/data/test/teranode3

volumes:
  data-postgres:
  data-kafka:
  data-aerospike1:
  data-aerospike2:
  data-aerospike3:
  data-teranode1:
  data-teranode2:
  data-teranode3:

networks:
  e2etest: