logLevel.dev=DEBUG
logLevel=INFO
logger_output_format=| %-25s| %-7s| %s |

gocore_stats_reported_time_threshold=24h
gocore_stats_addr=:9092
gocore_stats_addr.dev=localhost:9092

profilerAddr=:9091
profilerAddr.dev=localhost:9091

securityLevel=1
server_certFile=certs/example.server.crt
server_keyFile=certs/example.server.key

prometheusEndpoint=/metrics
tracing_enabled=false
use_open_tracing=false
tracing_collector_url=jaeger://jaeger-cluster-agent.jaeger.svc.cluster.local:6831
tracing_collector_url.dev=jaeger://:6831

sentry_dsn=https://dcad1ec4c60a4a2e80a7f8599e86ec4b@o4505013263466496.ingest.sentry.io/4505013264449536
sentry_dsn.dev=
sentry_traces_sample_rate=1.0

advertisingURL=
advertisingInterval.live=10s

logger_show_timestamps=false
logger_show_timestamps.dev=true
logger_show_timestamps.kubernetes=true

grpc_resolver=k8s
grpc_resolver.dev=dns

# --------- PROPAGATION SERVICE ---------
startPropagation.dev=true

propagation_grpcListenAddress=:8084
propagation_grpcListenAddress.dev=localhost:8084

propagation_grpcAddress=localhost:8084
txstore=badger:///data/txstore
#txstore=gcs:///ubsv-utxo-store
#txstore=minio://minio99:minio123@localhost:9000/txstore
subtreestore=badger:///data/subtreestore
#subtreestore=gcs:///subtreestore
#subtreestore=minio://minio99:minio123@localhost:9000/subtreestore

# --------- VALIDATOR SERVICE ---------
startValidator.dev=true

validator_grpcListenAddress=:8081
validator_grpcListenAddress.dev=localhost:8081

validator_grpcAddress=localhost:8081

# set up the kafka brokers to use for the validator - the path is the topic to use
# validator_kafkaBrokers.dev=kafka://localhost:9092/txs?partitions=1&replication=1
# comma separated list of hosts is allowed
# validator_kafkaBrokers.prod=kafka://some.url:9092,some.other.url:9092/txs?partitions=1&replication=1
validator_kafkaWorkers=100

# --------- BLOCK ASSEMBLY SERVICE ---------
blockassembly_grpcListenAddress=:8085
blockassembly_grpcListenAddress.dev=localhost:8085

blockassembly_grpcAddress=localhost:8085
startBlockAssembly.dev=true

# 2^15 = 32768 - less in DEV mode to speed up testing
initial_merkle_items_per_subtree.dev=32768
# 2^20 = 1048576
initial_merkle_items_per_subtree=1048576

# set up the kafka brokers to use for the block assembly - the path is the topic to use
# blockassembly_kafkaBrokers.dev=kafka://localhost:9092/assembly?partitions=1&replication=1
# comma separated list of hosts is allowed
# blockassembly_kafkaBrokers.prod=kafka://some.url:9092,some.other.url:9092/assembly?partitions=1&replication=1
blockassembly_kafkaWorkers=100

# --------- BLOCK VALIDATION SERVICE ---------
blockvalidation_grpcListenAddress=:8088
blockvalidation_grpcListenAddress.dev=localhost:8088

blockvalidation_grpcAddress=localhost:8088

startBlockValidation.dev=true

blockvalidation_peers=localhost:8081
# blockvalidation_peers=localhost:8081,localhost:8085

# --------- TX META DATA STORE SERVICE ---------
txmeta_grpcListenAddress=:8086
txmeta_grpcListenAddress.dev=localhost:8086

txmeta_grpcAddress=localhost:8086

txmeta_store=memory://localhost:8086
#txmeta_store=aerospike://localhost:3800/test
startTxMetaStore.dev=true

# --------- UTXOSTORE SERVICE ---------
startUtxoStore.dev=true

utxo_grpcListenAddress=:8082
utxo_grpcListenAddress.dev=localhost:8082

utxo_grpcAddress=localhost:8082

utxostore=memory://localhost:8082/splitbyhash
utxostore.dev=sqlite:///utxostore
#utxostore=postgres://postgres:postgres@localhost:5432/blockchain?sslmode=disable

#utxostore = foundationdb://localhost:8083
#utxostore = aerospike://localhost:3800/test

# --------- BLOCKCHAIN SERVICE ---------
blockchain_grpcListenAddress=:8087
blockchain_grpcListenAddress.dev=localhost:8087

blockchain_grpcAddress=localhost:8087
#blockchain_store=sqlite_memory:///blockchain
blockchain_store=sqlite:///blockchain
#blockchain_store=postgres://bitcoin:blockchain@localhost:5432/blockchain?sslmode=disable

startBlockchain.dev=true

# --------- SEEDER SERVICE ---------
startSeeder.dev=true
number_of_outputs=100
satoshis_per_output=1000

seeder_grpcListenAddress=:8083
seeder_grpcListenAddress.dev=localhost:8083

seeder_grpcAddress=localhost:8083

# --------- BOOTSTAP SERVICE ---------
startBootstrap.allinone=true
bootstrap_grpcListenAddress=:8089
bootstrap_grpcListenAddress.dev=localhost:8089

bootstrap_grpcAddress=bootstrap.ubsv.dev:8089

bootstrap_httpListenAddress=:8099
bootstrap_httpListenAddress.dev=localhost:8099

# --------- MINER SERVICE ---------
startMiner.dev=true

coinbase_number_of_outputs=1000
coinbase_number_of_outputs.dev=10
# node -e "const bsv = require('bsv'); const privateKey = bsv.PrivateKey.fromRandom(); console.log('privateKey: ' + privateKey.toString()); console.log('address: ' + privateKey.toAddress().toString())"
coinbase_wallet_privkey=KzKKMRt8P7kE5MKBRWMREufpeQVVX8QCoeV5rNXHqNaToQ5FPeh6
coinbase_wallet_address=1L7WqJNim1vBr4Eesi5MhMXKXiYUABYdtg
coinbase_arbitrary_text=/teranode/

# --------- BLOB SERVER -----------
blobserver_httpListenAddress=:8090
blobserver_httpListenAddress.dev=localhost:8090

blobserver_clientName=Not specified
blobserver_clientName.dev.siggi=Siggi
blobserver_clientName.dev.simon=Simon
blobserver_clientName.dev.liam=Liam
blobserver_clientName.dev.jake=Jake

blobserver_httpAddress=http://localhost:8090
blobserver_httpAddress.dev.siggi=http://13.49.21.218:18090
blobserver_httpAddress.dev.simon=http://13.49.21.218:18190
blobserver_httpAddress.dev.liam=http://13.49.21.218:18290
blobserver_httpAddress.dev.jake=http://13.49.21.218:18390

# This is the address that the blobserver GRPC will listen on...
blobserver_grpcListenAddress=:8091
blobserver_grpcListenAddress.dev=localhost:8091

blobserver_grpcAddress=localhost:8091
blobserver_grpcAddress.dev.siggi=13.49.21.218:18091
blobserver_grpcAddress.dev.simon=13.49.21.218:18191
blobserver_grpcAddress.dev.liam=13.49.21.218:18291
blobserver_grpcAddress.dev.jake=13.49.21.218:18391

startBlobServer.dev=true

# ---- COINBASE TRACKER SERVICE ----
coinbase_grpcListenAddress=:8093
coinbase_grpcListenAddress.dev=localhost:8093

coinbase_grpcAddress=localhost:8093

coinbase_store=sqlite:///coinbase
startCoinbase.dev=true

# use the CGO signer
use_cgo_signer=true
use_cgo_signer.kubernetes=true

# use the CGO signature verifier
use_cgo_verifier=true
use_cgo_verifier.kubernetes=true

# IPV6
#ipv6_addresses=ff02::1234
