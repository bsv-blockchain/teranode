x-teranode-base: &teranode-base
  image: teranode:latest
  network_mode: "host"
  depends_on:
    - postgres
    - kafka-shared
  volumes:
    - ./data:/app/data

x-aerospike-base: &aerospike-base
  image: aerospike:ce-7.2.0.3_1
  # mem_limit: 1024m
  network_mode: "host"
  command: --config-file /etc/aerospike.conf

services:

  teranode-builder:
    image: teranode:latest
    network_mode: "host"
    build:
      context: .
      dockerfile: local.Dockerfile
      args:
        BASE_IMG: 434394763103.dkr.ecr.eu-north-1.amazonaws.com/ubsv:base-build-db1a6f0
        RUN_IMG: 434394763103.dkr.ecr.eu-north-1.amazonaws.com/ubsv:base-run-db1a6f0
    entrypoint: [ "pwd" ]

  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:1.59
    network_mode: "host"
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    ports:
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"
      - "14250:14250"
      - "14268:14268"
      - "14269:14269"
      - "9411:9411"

  postgres:
    container_name: postgres
    image: postgres:latest
    network_mode: "host"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: really_strong_password_change_me
      POSTGRES_DB: postgres
    volumes:
      - ./deploy/dev/postgres-update-config.sh:/docker-entrypoint-initdb.d/postgres-update-config.sh
      - ./scripts/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./data/postgres:/var/lib/postgresql/data
    restart: on-failure

  kafka-shared:
    container_name: kafka-shared
    image: redpandadata/redpanda:latest
    network_mode: "host"
    mem_limit: 256m
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --node-id 0
      - --kafka-addr PLAINTEXT://0.0.0.0:19092
      - --advertise-kafka-addr PLAINTEXT://localhost:19092
      - --pandaproxy-addr 0.0.0.0:9093
      - --advertise-pandaproxy-addr localhost:19093

  kafka-console-shared:
    container_name: kafka-console-shared
    image: docker.redpanda.com/redpandadata/console:latest
    network_mode: "host"
    restart: on-failure
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["localhost:19092"]
          schemaRegistry:
            enabled: true
            urls: ["http://localhost:8081"]
    depends_on:
      - kafka-shared

  teranode-1:
    <<: *teranode-base
    container_name: teranode-1
    depends_on:
      postgres:
        condition: service_started
      kafka-shared:
        condition: service_started
      aerospike-1:
        condition: service_started
    entrypoint: [ "/app/wait.sh", "localhost", "3100", "2", "--", "/app/wait.sh", "localhost", "15432", "0", "--", "/app/wait.sh", "localhost", "19092", "0", "--", "/app/teranode.run", "-coinbase=1", "-blockpersister=1", "-rpc=1" ]
    environment:
      SETTINGS_CONTEXT: "docker.host.teranode1"
      JAEGER_SERVICE_NAME: teranode-1
      JAEGER_AGENT_HOST: localhost
      JAEGER_AGENT_PORT: 6831
      logLevel: "DEBUG"
    volumes:
      - ./settings_local.conf:/app/settings_local.conf
      - ./data/teranode1/txstore:/app/data/teranode1/txstore
      - ./data/teranode1/subtreestore:/app/data/teranode1/subtreestore
      - ./data/teranode1/blockstore:/app/data/teranode1/blockstore
      - ./data/teranode1/subtree_quorum:/app/data/teranode1/subtree_quorum
      - ./data/teranode1/external:/app/data/teranode1/external

  teranode-2:
    <<: *teranode-base
    container_name: teranode-2
    depends_on:
      postgres:
        condition: service_started
      kafka-shared:
        condition: service_started
      aerospike-2:
        condition: service_started
    entrypoint: [ "/app/wait.sh", "localhost", "3200", "2", "--", "/app/wait.sh", "localhost", "15432", "0", "--", "/app/wait.sh", "localhost", "19092", "0", "--", "/app/teranode.run" ]
    environment:
      SETTINGS_CONTEXT: "docker.host.teranode2"
      JAEGER_SERVICE_NAME: teranode-2
      JAEGER_AGENT_HOST: localhost
      JAEGER_AGENT_PORT: 6831
    volumes:
      - ./settings_local.conf:/app/settings_local.conf
      - ./data/teranode2/txstore:/app/data/teranode2/txstore
      - ./data/teranode2/subtreestore:/app/data/teranode2/subtreestore
      - ./data/teranode2/blockstore:/app/data/teranode2/blockstore
      - ./data/teranode2/subtree_quorum:/app/data/teranode2/subtree_quorum
      - ./data/teranode2/external:/app/data/teranode2/external

  teranode-3:
    <<: *teranode-base
    container_name: teranode-3
    depends_on:
      postgres:
        condition: service_started
      kafka-shared:
        condition: service_started
      aerospike-3:
        condition: service_started
    entrypoint: [ "/app/wait.sh", "localhost", "3300", "2", "--", "/app/wait.sh", "localhost", "15432", "0", "--", "/app/wait.sh", "localhost", "19092", "0", "--", "/app/teranode.run" ]
    environment:
      SETTINGS_CONTEXT: "docker.host.teranode3"
      JAEGER_SERVICE_NAME: teranode-3
      JAEGER_AGENT_HOST: localhost
      JAEGER_AGENT_PORT: 6831
    volumes:
      - ./settings_local.conf:/app/settings_local.conf
      - ./data/teranode3/txstore:/app/data/teranode3/txstore
      - ./data/teranode3/subtreestore:/app/data/teranode3/subtreestore
      - ./data/teranode3/blockstore:/app/data/teranode3/blockstore
      - ./data/teranode3/subtree_quorum:/app/data/teranode3/subtree_quorum
      - ./data/teranode3/external:/app/data/teranode3/external

  miner-1:
    <<: *teranode-base
    container_name: miner-1
    depends_on:
      - teranode-1
    environment:
      SETTINGS_CONTEXT: "docker.host.teranode1"
    command: [ "/app/wait.sh", "localhost", "19292", "2", "--", "/app/miner.run", "-coinbase-addr", "myL4TciLD59ESU9MmKH1rvfYb8QXhFHHN6", "-coinbase-sig", "/teranode1/", "-rpcport", "19292" ]
    volumes:
      - ./settings_local.conf:/app/settings_local.conf
      - ./data/miner1:/app/data

  miner-2:
    <<: *teranode-base
    container_name: miner-2
    depends_on:
      - teranode-2
    environment:
      SETTINGS_CONTEXT: "docker.host.teranode2"
    command: [ "/app/wait.sh", "localhost", "29292", "2", "--", "/app/miner.run", "-coinbase-addr", "mkzvRZ2D8CBVYPb3DTB7fu8RC62NukBkpe", "-coinbase-sig", "/teranode2/", "-rpcport", "29292" ]
    volumes:
      - ./settings_local.conf:/app/settings_local.conf
      - ./data/miner2:/app/data

  miner-3:
    <<: *teranode-base
    container_name: miner-3
    depends_on:
      - teranode-3
    environment:
      SETTINGS_CONTEXT: "docker.host.teranode3"
    command: [ "/app/wait.sh", "localhost", "39292", "2", "--", "/app/miner.run", "-coinbase-addr", "mxD461rHfmVzkpn3gNbY8xEV1E8482ijyV", "-coinbase-sig", "/teranode3/", "-rpcport", "39292" ]
    volumes:
      - ./settings_local.conf:/app/settings_local.conf
      - ./data/miner3:/app/data

  tx-blaster-1:
    <<: *teranode-base
    container_name: tx-blaster-1
    environment:
      SETTINGS_CONTEXT: "docker.host.teranode1"
      BLASTER_ARGS: "-workers=2"
    # pass arguments to the command
    command: [ "/app/blaster.run", "-workers=1", "-print=0", "-profile=:7092", "-log=0", "-limit=100", "--quic=false" ]
    volumes:
      - ./settings_local.conf:/app/settings_local.conf
      - ./data/txblaster1:/app/data
      # - ./data/txblaster.log:/app/data/txblaster.log

  prometheus-1:
    container_name: prometheus-1
    image: prom/prometheus:v2.44.0
    network_mode: "host"
    mem_limit: 64m
    command:
      - '--web.listen-address=:19090'
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ./deploy/dev/prometheus/prometheus-host-1.yml:/etc/prometheus/prometheus.yml

  prometheus-2:
    container_name: prometheus-2
    image: prom/prometheus:v2.44.0
    network_mode: "host"
    mem_limit: 64m
    command:
      - '--web.listen-address=:29090'
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ./deploy/dev/prometheus/prometheus-host-2.yml:/etc/prometheus/prometheus.yml

  prometheus-3:
    container_name: prometheus-3
    image: prom/prometheus:v2.44.0
    network_mode: "host"
    mem_limit: 64m
    command:
      - '--web.listen-address=:39090'
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ./deploy/dev/prometheus/prometheus-host-3.yml:/etc/prometheus/prometheus.yml

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    network_mode: "host"
    volumes:
      - ./deploy/dev/grafana/datasources/main-host.yaml:/etc/grafana/provisioning/datasources/main.yaml
      - ./deploy/dev/grafana/dashboards/main.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./deploy/dev/grafana/dashboards:/var/lib/grafana/dashboards
      - ./deploy/dev/grafana/grafana.db:/var/lib/grafana
    depends_on:
      - prometheus-1
      - prometheus-2
      - prometheus-3

  aerospike-1:
    container_name: aerospike-1
    <<: *aerospike-base
    volumes:
      - ./deploy/dev/aerospike/aerospike-1.conf:/etc/aerospike.conf
      - ./data/aerospike1/logs:/var/log/aerospike
      - ./data/aerospike1/data:/opt/aerospike/data

  aerospike-2:
    container_name: aerospike-2
    <<: *aerospike-base
    volumes:
      - ./deploy/dev/aerospike/aerospike-2.conf:/etc/aerospike.conf
      - ./data/aerospike2/logs:/var/log/aerospike
      - ./data/aerospike2/data:/opt/aerospike/data

  aerospike-3:
    container_name: aerospike-3
    <<: *aerospike-base
    volumes:
      - ./deploy/dev/aerospike/aerospike-3.conf:/etc/aerospike.conf
      - ./data/aerospike3/logs:/var/log/aerospike
      - ./data/aerospike3/data:/opt/aerospike/data

  aerospike-exporter-1:
    image: aerospike/aerospike-prometheus-exporter:latest
    container_name: aerospike-exporter-1
    environment:
      AS_HOST: "localhost"
      AS_PORT: "3100"
      AGENT_BIND_PORT: "19145"
      METRIC_LABELS: "type='development',source='aerospike'"
    network_mode: "host"

  aerospike-exporter-2:
    image: aerospike/aerospike-prometheus-exporter:latest
    container_name: aerospike-exporter-2
    environment:
      AS_HOST: "localhost"
      AS_PORT: "3200"
      AGENT_BIND_PORT: "29145"
      METRIC_LABELS: "type='development',source='aerospike'"
    network_mode: "host"

  aerospike-exporter-3:
    image: aerospike/aerospike-prometheus-exporter:latest
    container_name: aerospike-exporter-3
    environment:
      AS_HOST: "localhost"
      AS_PORT: "3300"
      AGENT_BIND_PORT: "39145"
      METRIC_LABELS: "type='development',source='aerospike'"
    network_mode: "host"

  grpc-client:
    build:
      context: .
      dockerfile: Dockerfile.grpc-client-host
    depends_on:
      - teranode-1
      - teranode-2
      - teranode-3
    network_mode: "host"
