x-aerospike-base: &aerospike-base
  image: aerospike:ce-6.4.0.7_2
  # mem_limit: 1024m
  network_mode: "host"
  command: --config-file /etc/aerospike.conf

x-ubsv-base:
  &ubsv-base
  image: ubsv:latest
  network_mode: "host"
  depends_on:
    - postgres
    - kafka-shared
  environment:
    logLevel: "DEBUG"
  volumes:
    - ./data:/app/data

services:

  ubsv-builder:
    image: ubsv:latest
    network_mode: "host"
    build:
      context: .
      dockerfile: local.Dockerfile
      args:
        BASE_IMG: 434394763103.dkr.ecr.eu-north-1.amazonaws.com/ubsv:base-build-2db1b0e
        RUN_IMG: 434394763103.dkr.ecr.eu-north-1.amazonaws.com/ubsv:base-run-2db1b0e
    entrypoint: ["pwd"]

  postgres:
    container_name: postgres
    image: postgres:latest
    network_mode: "host"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: really_strong_password_change_me
      POSTGRES_DB: postgres
    volumes:
      - ./deploy/dev/postgres-update-config.sh:/docker-entrypoint-initdb.d/postgres-update-config.sh
      - ./scripts/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -p 15432 -U postgres" ]
      interval: 2s
      timeout: 5s
      retries: 5
    restart: on-failure

  aerospike-1:
    container_name: aerospike-1
    <<: *aerospike-base
    volumes:
      - ./deploy/dev/aerospike/aerospike-1.conf:/etc/aerospike.conf

  aerospike-2:
    container_name: aerospike-2
    <<: *aerospike-base
    volumes:
      - ./deploy/dev/aerospike/aerospike-2.conf:/etc/aerospike.conf

  aerospike-3:
    container_name: aerospike-3
    <<: *aerospike-base
    volumes:
      - ./deploy/dev/aerospike/aerospike-3.conf:/etc/aerospike.conf

  kafka-shared:
    container_name: kafka-shared
    image: vectorized/redpanda:latest
    network_mode: "host"
    mem_limit: 256m
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --node-id 0
      - --kafka-addr PLAINTEXT://0.0.0.0:19092
      - --advertise-kafka-addr PLAINTEXT://localhost:19092
      - --pandaproxy-addr 0.0.0.0:9093
      - --advertise-pandaproxy-addr localhost:19093

  kafka-console-shared:
    container_name: kafka-console-shared
    image: docker.redpanda.com/redpandadata/console:latest
    network_mode: "host"
    restart: on-failure
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["localhost:19092"]
          schemaRegistry:
            enabled: true
            urls: ["http://localhost:8081"]
    depends_on:
      - kafka-shared

  ubsv-1:
    <<: *ubsv-base
    container_name: ubsv-1
    depends_on:
      postgres:
        condition: service_healthy
      kafka-shared:
        condition: service_started
      aerospike-1:
        condition: service_started
    entrypoint: ["/app/wait.sh", "localhost", "3100", "2", "--", "/app/wait.sh", "localhost", "15432", "0", "--", "/app/wait.sh", "localhost", "19092", "0", "--", "/app/ubsv.run", "-miner=1", "-coinbase=1"]
    environment:
      SETTINGS_CONTEXT: "docker.host.ubsv1"
    volumes:
      - ./settings_local.conf:/app/settings_local.conf
      - ./data/ubsv1/txstore:/app/data/txstore
      - ./data/ubsv1/subtreestore:/app/data/subtreestore
      - ./data/ubsv1/blockstore:/app/data/blockstore

  ubsv-2:
    <<: *ubsv-base
    container_name: ubsv-2
    depends_on:
      postgres:
        condition: service_healthy
      kafka-shared:
        condition: service_started
      aerospike-2:
        condition: service_started
    entrypoint: ["/app/wait.sh", "localhost", "3100", "2", "--", "/app/wait.sh", "localhost", "15432", "0", "--", "/app/wait.sh", "localhost", "19092", "0", "--", "/app/ubsv.run", "-miner=1", "-coinbase=1"]
    environment:
      SETTINGS_CONTEXT: "docker.host.ubsv2"
    volumes:
      - ./settings_local.conf:/app/settings_local.conf
      - ./data/ubsv2/txstore:/app/data/txstore
      - ./data/ubsv2/subtreestore:/app/data/subtreestore
      - ./data/ubsv2/blockstore:/app/data/blockstore

  ubsv-3:
    <<: *ubsv-base
    container_name: ubsv-3
    depends_on:
      postgres:
        condition: service_healthy
      kafka-shared:
        condition: service_started
      aerospike-3:
        condition: service_started
    entrypoint: ["/app/wait.sh", "localhost", "3100", "2", "--", "/app/wait.sh", "localhost", "15432", "0", "--", "/app/wait.sh", "localhost", "19092", "0", "--", "/app/ubsv.run", "-miner=1", "-coinbase=1"]
    environment:
      SETTINGS_CONTEXT: "docker.host.ubsv3"
    volumes:
      - ./settings_local.conf:/app/settings_local.conf
      - ./data/ubsv3/txstore:/app/data/txstore
      - ./data/ubsv3/subtreestore:/app/data/subtreestore
      - ./data/ubsv3/blockstore:/app/data/blockstore

  tx-blaster-1:
    <<: *ubsv-base
    container_name: tx-blaster-1
    depends_on:
      - ubsv-1
      - ubsv-2
      - ubsv-3
    environment:
      SETTINGS_CONTEXT: "docker.host.ubsv1"
      BLASTER_ARGS: "-workers=2"
    # pass arguments to the command
    command: ["/app/blaster.run", "-workers=100", "-print=0", "-profile=:9092", "-log=0", "-limit=100", "--quic=false"]
    volumes:
      - ./data/txblaster1:/app/data
      # - ./data/txblaster.log:/app/data/txblaster.log

  prometheus-1:
    container_name: prometheus-1
    image: prom/prometheus:v2.44.0
    network_mode: "host"
    mem_limit: 64m
    command:
      - '--web.listen-address=:19090'
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ./deploy/dev/prometheus/prometheus-host-1.yml:/etc/prometheus/prometheus.yml

  prometheus-2:
    container_name: prometheus-2
    image: prom/prometheus:v2.44.0
    network_mode: "host"
    mem_limit: 64m
    command:
      - '--web.listen-address=:29090'
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ./deploy/dev/prometheus/prometheus-host-2.yml:/etc/prometheus/prometheus.yml

  prometheus-3:
    container_name: prometheus-3
    image: prom/prometheus:v2.44.0
    network_mode: "host"
    mem_limit: 64m
    command:
      - '--web.listen-address=:39090'
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ./deploy/dev/prometheus/prometheus-host-3.yml:/etc/prometheus/prometheus.yml

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    network_mode: "host"
    volumes:
      - ./deploy/dev/grafana/datasources/main-host.yaml:/etc/grafana/provisioning/datasources/main.yaml
      - ./deploy/dev/grafana/dashboards/main.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./deploy/dev/grafana/dashboards:/var/lib/grafana/dashboards
      - ./deploy/dev/grafana/grafana.db:/var/lib/grafana
    depends_on:
      - prometheus-1
      - prometheus-2
      - prometheus-3

  aerospike-exporter-1:
    image: aerospike/aerospike-prometheus-exporter:latest
    container_name: aerospike-exporter-1
    environment:
      AS_HOST: "localhost"
      AS_PORT: "3100"
      AGENT_BIND_PORT: "19145"
      METRIC_LABELS: "type='development',source='aerospike'"
    network_mode: "host"

  aerospike-exporter-2:
    image: aerospike/aerospike-prometheus-exporter:latest
    container_name: aerospike-exporter-2
    environment:
      AS_HOST: "localhost"
      AS_PORT: "3200"
      AGENT_BIND_PORT: "29145"
      METRIC_LABELS: "type='development',source='aerospike'"
    network_mode: "host"

  aerospike-exporter-3:
    image: aerospike/aerospike-prometheus-exporter:latest
    container_name: aerospike-exporter-3
    environment:
      AS_HOST: "localhost"
      AS_PORT: "3300"
      AGENT_BIND_PORT: "39145"
      METRIC_LABELS: "type='development',source='aerospike'"
    network_mode: "host"
