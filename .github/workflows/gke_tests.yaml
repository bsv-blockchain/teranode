name: tests
on:
  workflow_call

env:
  REPO: ubsv
  ECR_REGION: eu-north-1

jobs:
  go-longtests:
    name: Go longtests
    runs-on: ubsv-runner
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.21.0"
          cache: "false"

      - name: Run Go tests
        run: make longtests

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.out
          retention-days: 1

  smoketest:
    name: smoketest
    runs-on: ubsv-runner
    env:
      GITHUB_ACTIONS: true
    timeout-minutes: 15
    steps:
      # Setup Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Set up AWS CLI
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.ECR_REGION }}

      # Authenticate Docker to AWS ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: "1.21.0"
          cache: "false"

      - name: Run Smoke tests
        run: make smoketests no-reset=1
        continue-on-error: false

  sonarqube:
    name: Sonarqube
    runs-on: ubsv-runner
    needs: go-longtests
    timeout-minutes: 15
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: coverage-report

    - name: Run filename check script
      run: |
        ./scripts/check_filenames.sh

    # Re-run golangci separately without exiting on errors and generating a report for use in Sonar
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v5
      with:
        version: latest
        args: --timeout=5m --issues-exit-code=0 --out-format=checkstyle:golangci-lint-report.xml

    - uses: twingate/github-action@4493ffc3806241aa98194a3fa679f874bce013b5
      with:
        service-key: ${{ secrets.TWINGATE_GH_ACTIONS_SERVICE_KEY }} # Required

    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@v2.0.2
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: https://sonarqube.ubsv.dev
      continue-on-error: true

    - name: SonarQube Quality Gate check
      uses: sonarsource/sonarqube-quality-gate-action@master
      timeout-minutes: 10
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: https://sonarqube.ubsv.dev
      continue-on-error: true
