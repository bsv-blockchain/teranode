name: teranode-public-manifest
on:
  workflow_call:
    inputs:
      repo:
        description: 'Repo name'
        required: true
        type: string
      region:
        description: 'AWS region'
        required: true
        type: string
      version_tag:
        description: 'Release version'
        required: true
        type: string
jobs:
  build_manifest:
    name: Build manifest
    runs-on: ubuntu-latest
    outputs:
      registry: ${{ steps.login-ecr.outputs.registry }}
    steps:

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.region }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: true

      - name: Get short commit hash
        id: shorthash
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - uses: int128/docker-manifest-create-action@v2
        with:
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ inputs.repo }}:latest
            ${{ steps.login-ecr.outputs.registry }}/${{ inputs.repo }}:${{ inputs.version_tag }}
            ${{ steps.login-ecr.outputs.registry }}/${{ inputs.repo }}:${{ github.sha }}
            ${{ steps.login-ecr.outputs.registry }}/${{ inputs.repo }}:${{ steps.shorthash.outputs.sha_short }}
          sources: |
            ${{ steps.login-ecr.outputs.registry }}/${{ inputs.repo }}:${{ github.sha }}-amd64
            ${{ steps.login-ecr.outputs.registry }}/${{ inputs.repo }}:${{ github.sha }}-arm64
