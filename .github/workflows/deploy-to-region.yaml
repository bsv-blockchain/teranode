on:
  workflow_dispatch:
    inputs:
      ubsv_env:
        description: 'Environment that we are deploying to (either scaling or allinone)'
        required: true
      logLevel:
        description: 'Log level'
        required: true
        default: 'debug'

  workflow_call:
    inputs:
      region:
        required: true
        type: string

jobs:
  deploy-to-region:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Set up AWS CLI
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2.2.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.region }}  # Replace with your desired AWS region

      # Install and configure kubectl for AWS EKS
      - name: Install kubectl & Login to EKS
        run: |
          # Download kubectl
          sudo snap install kubectl --classic
          kubectl version --client
          aws eks update-kubeconfig --name aws-ubsv-playground --region ${{ inputs.region }}
          kubectl cluster-info

      # install kustomize for deployment
      - name: Install Kustomize
        run: |-
          # Set up kustomize
          mkdir kustomize
          cd kustomize
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          chmod u+x ./kustomize
          cp ./kustomize /usr/local/bin
          cd ..


      # Deploy the Docker image to the GKE cluster
      - name: Build k8s files
        run: |-

          # Setting Image
          cd ./deploy/k8s/${{ inputs.region }}/$${{ inputs.ubsv_env }}
          echo "Setting image"
          kustomize edit set image REPO:IMAGE:TAG=434394763103.dkr.ecr.eu-north-1.amazonaws.com/ubsv:$GITHUB_SHA

          # kustomize render & apply
          echo "Building kustomize build in $(pwd)"
          kustomize build . | kubectl replace -f -

      - name: Validate Deployment Healthy
        run: |-
          # Apply latest deployment configuration changes
          cd ./deploy/k8s/${{ inputs.region }}/$${{ inputs.ubsv_env }}
          for file in $(ls *deployment.yaml); do  # Loop over all files with the name pattern
              # Get filename without extension. Remove everything after the first dot in the file name
              FILE_NAME="${file%%.*}"

              # Run kubectl commands
              kubectl rollout status -f "$file"  --timeout=120s
          done
